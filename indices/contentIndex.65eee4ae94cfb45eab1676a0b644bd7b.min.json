{"/":{"title":"🪴 Quartz 3.","content":"\nHost your second brain and [digital garden](https://jzhao.xyz/posts/networked-thought) for free. Quartz features\n\n1. Extremely fast natural-language [[notes/search]]\n2. Customizable and hackable design based on [Hugo](https://gohugo.io/)\n3. Automatically generated backlinks, link previews, and local graph\n4. Built-in [[notes/CJK + Latex Support (测试) | CJK + Latex Support]] and [[notes/callouts | Admonition-style callouts]]\n5. Support for both Markdown Links and Wikilinks\n\nCheck out some of the [amazing gardens that community members](notes/showcase.md) have published with Quartz or read about [why I made Quartz](notes/philosophy.md) to begin with.\n\n## Get Started\n\n\u003e 📚 Step 1: [Setup your own digital garden using Quartz](notes/setup.md)\n\nReturning user? Figure out how to [[notes/updating|update]] your existing Quartz garden.\n\nIf you prefer browsing the contents of this site through a list instead of a graph, you see a list of all [setup-related notes](/tags/setup).\n\n### Troubleshooting\n\n- 🚧 [Troubleshooting and FAQ](notes/troubleshooting.md)\n- 🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n- 👀 [Discord Community](https://discord.gg/cRFFHYye7t)\n\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EC%9A%94%EC%95%BD":{"title":"","content":"흔히 쓰이는 자료구조들이 어떤 역할을 하는지 간략히 적어보자\n\n# 1.배열\n**배열**은 c언어 기준으로 고정된 크기만큼의 연속된 메모리 할당이다\n즉 전체 크기에 따라 메모리를 더 할당해줘야 한다\n\n내생각\n이경우 데이터에 맞는 크기를 정해줘서 자원을 효율적으로 쓸 수 있지만 \n에러가 발생할수도 있다.\n\n미리 크기를 지정하지 않고 자동으로 조절할 수 있다면 좋지않을까?\n이러한 고민을 해결하고자 크기를 지정하지않고 자동으로 리사이징하는 배열인 **동적배열**이 등장했다.\n대부분의 프로그래밍 언어는 동적배열을 지원하며 \n자바에서는 ArrayList, C++에서는 std::vector 파이썬에서는 list가 동적배열 자료형이다.\n\n동적배열의 동작방식은 일반적으로 더블링(Doubling)이라고 하는데\n배열의 크기가 가득차면 원래크기의 두배씩 늘려주는 방식이다","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%86%8C%EC%88%98":{"title":"","content":"## 1. 하는 일\n\u003e 소수를 찾는다\n\n## 2. 용법\n### 1)그냥 찾기\n\u003e \n```python\nn=100\n\ndef isPrime(a):\n  if(a\u003c2):\n    return False\n  for i in range(2,a):\n    if(a%i==0):\n      return False\n  return True\n\nfor i in range(n+1):\n  if(isPrime(i)):\n    print(i)\n```\n\n### 2) 에라토스테네스의체\n\u003e\n```python\na = [False,False] + [True]*(n-1)\nprimes=[]\n\nfor i in range(2,n+1):\n\tif a[i]:\n\t\tprimes.append(i)\n\tfor j in range(2*i, n+1, i):\n\t\ta[j] = False\n```\n\n## 3.예제\n\u003e소수의 개수찾기\n   ex)  n이 10일때\n```python\ndef solution(n):\n    a = [False,False] + [True]*(n-1)\n    primes=[]\n\n    for i in range(2,n+1):\n        if a[i]:\n            primes.append(i)\n        for j in range(2*i, n+1, i):\n            a[j] = False\n    return len(primes)\n\nprint(solution(10)) # 4\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%88%9C%EC%97%B4%EA%B3%BC%EC%A1%B0%ED%95%A9":{"title":"","content":"## 1. 하는 일\n\u003e순열과 조합 구하는 방법\n\u003efor문도 있겠지만 나중에 알아보고 쉬운 itertools 먼저보자\n\n## 2. 용법\n### 1) 순열\n\u003e 순서가 있다 \n\u003e ex) 1, 2, 3이면 3P3 = 3\\*2\\*1 (6개)\n\u003e = [(1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), (3, 2, 1)]\n```python\nfrom itertools import permutations\na = [1, 2, 3]\nprint(list(permutations(a, 3)))\n# [(1, 2, 3), (1, 3, 2), \n#  (2, 1, 3), (2, 3, 1), \n#  (3, 1, 2), (3, 2, 1)]\n```\n\n### 2) 조합\n\u003e순서가 없다 \n\u003eex) 1, 2, 3이면 3C3 = 3\\*2\\*1/3\\*2\\*1 (1개)\n\u003e = [(1, 2, 3)]\n```python\nfrom itertools import combinations\na = [1, 2, 3]\nprint(list(combinations(a, 3)))\n# [(1, 2, 3)]\n\n```\n\n## 3.예제\n\u003e\n   ex) \n```python\n\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0":{"title":"","content":"## 1. 하는 일\n\u003e그냥 약수구하기, 약수 빠르게 구하기\n\n## 2. 용법\n### 1) 약수의 개수 구하기\n\u003e  그냥 약수를 구하는 방법이다. 비교적 느리다\n```python\ni = 10\ndivisor = 0\nfor j in range(1, i + 1): # 1~10 까지 돈다\n\tif i % j == 0:\n\t\tdivisor += 1\n```\n\n### 2) 약수의 개수 빠르게 구하기\n\u003e 약수에 짝이 있는 것을 이용해서 구한다\n\u003e 임의의 자연수 N의 약수들 중에서\n\u003e 두 약수의 곱이 N이 되는 약수 A와 약수 B는 반드시 존재한다 (i, n//i)\n\u003e \n\u003e j != (i // j) 이 조건은 j**2 != i로 표현할 수도 있다\n\u003e 4의 경우 2\\*2 둘이 곱해 4가 되는 두 약수가 동일한 수니까 \n\u003e 이 수는 더하지 않으면 올바르게 약수를 셀 수 있다\n\n```python\ni = 10\ndivisor = 0\nfor j in range(1, int(i ** (1 / 2)) + 1): # 1~3 까지 돈다\n\tif i % j == 0: #두 약수의 곱이 N이 되는 약수 A\n\t\tdivisor += 1 # j : 1, 2\n\t\tif (j != (i // j)) : # 두 약수의 곱이 N이 되는 약수 B\n\t\t\tdivisor += 1 # i//j : 10//1(10), 10//2(5)\n```\n\n## 3.예제\n\u003e\n   ex) [[57 기사단원의 무기]]\n   \n```python\ndef solution(number, limit, power):\n    answer = 0\n    \n    for i in range(1, number + 1):\n        divisor = 0\n        for j in range(1, int(i**(1/2))+1):\n            if i%j == 0:\n                divisor += 1\n                if ((j**2) != i) :\n                    divisor +=1\n        if divisor \u003e limit:\n            answer += power\n        else:\n            answer += divisor\n    return answer\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%A7%84%EB%B2%95%EB%B3%80%ED%99%98%EA%B0%9C%EB%85%90":{"title":"","content":"\n![[진법변환1.png]]\n![[진법변환2.png]]\n## 1. 설명\n\u003e n진법에서 n진법으로 변환한다\n\n## 2. 용법\n### 1)  10진법 -\u003e 3진법\n\u003e 10진법 숫자 45를 3진법 숫자로 바꾸기\n```python\nn = 45\nthreeN = []\nwhile n \u003e 0:\n\tthreeN.append(n % 3)\n\tn = n//3\nprint(''.join(map(str,reversed(threeN)))) # 1200 (3진법)\n\t\n```\n\n### 2) 3진법 -\u003e 10진법\n\u003e\n```python\nthreeN = ''.join(map(str,reversed(threeN)))\ntenN = 0;\nfor i, v in enumerate(threeN):\n\ttenN += v * 3 ** (len(threeN) - (i+1)) \n\nprint(tenN) # 45\n```\n\n## 3.예제\n\u003e 10진법 숫자 n을 뒤집힌 3진법으로 만들어서 다시 10진법으로 변환\n   ex) \n```python\ndef solution(n):\n    # 뒤집힌 3진법으로 바꾸기\n    threeN = []\n    while n \u003e 0:\n        threeN.append(n % 3)\n        n = n//3  \n    # 10진법으로 바꾸기\n    tenN = 0;\n    for i, v in enumerate(threeN):\n        tenN += v * 3 ** (len(threeN) - (i+1)) \n    return tenN\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0":{"title":"","content":"## 1. 설명\n\u003e최대공약수와 최소공배수를 구한다\n\n## 2. 용법\n### 1) 최대공약수\n\u003e  m, n 두 수중에 더 큰수부터 1씩 빼면서\n\u003e  공약수중에 최대값을 찾는다\n```python\n# 최대공약수\n    for i in range(max(n,m), 0, -1):\n        if n % i == 0 and m % i == 0:\n            gcd = i\n            break\n```\n\n### 2) 최소공배수\n\u003em, n 두 수 중에 큰값부터 시작해서 m, n의 곱까지 1씩 더하면서\n\u003e공배수중에 최소값을 찾는다\n```python\n # 최소공배수\n    for i in range(max(n, m), (n * m) + 1):\n        if i % n == 0 and i % m == 0:\n            lcm = i\n            break\n```\n\n## 3.예제\n\u003e\n   ex) 두 수 n, m이 있을때 최대공약수와 최소공배수를 구한다\n```python\ndef solution(n, m):\n    gcd = lcm = 0\n    \n    # 최대공약수\n    for i in range(max(n,m), 0, -1):\n        if n % i == 0 and m % i == 0:\n            gcd = i\n            break\n    \n    # 최소공배수\n    for i in range(max(n, m), (n * m) + 1):\n        if i % n == 0 and i % m == 0:\n            lcm = i\n            break\n            \n    return [gcd, lcm]\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EB%B9%88%EC%B9%B8%EC%B1%84%EC%9A%B0%EA%B8%B0":{"title":"","content":"## 1. 하는 일\n\u003e 숫자를 입력받아 빈 개수 만큼 문자의 앞에 0으로 빈칸을 채움\n\n## 2. 용법\n### 1) zfill\n\u003e 0으로 채운다\n```python\n\"2\".zfill(3) # 002\n\"50000\".zfill(5) # 50000\n\"123\".zfill(5) # 00123\n```\n\n### 2) rjust\n\u003e원하는 문자로 채운다\n```python\n\"2\".zfill(3, \"a\") # aa2\n\"50000\".zfill(5, \"a\") # 50000\n\"123\".zfill(5, \"0\") # 00123\n```\n\n## 3.예제\n\u003e\n   ex) \n```python\n\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EC%88%98%ED%95%99%EA%B4%80%EB%A0%A8%ED%95%A8%EC%88%98":{"title":"","content":"## 1. 하는 일\n\u003e 수학관련 간단한것들 여기 정리\n\n## 2. 용법\n### 1) abs\n\u003e 절대값계산\n```python\nabs(-1) # 1\nabs(1) # 1\n```\n\n### 2) \n\u003e\n```python\n\n```\n\n## 3.예제\n\u003e\n   ex) \n```python\n\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EC%A7%84%EB%B2%95%EB%B3%80%ED%99%98":{"title":"","content":"## 1. 하는 일\n\u003e진법을 변환한다\n\n## 2. 용법\n### 1) n진수 -\u003e 10진수\n\u003e \n```python\nprint(int('101',2)) # 5\nprint(int('202',3)) # 20\nprint(int('303',4)) # 51\nprint(int('404',5)) # 104\nprint(int('505',6)) # 185\nprint(int('ACF',16)) # 2767\n```\n\n### 2)  10진수 -\u003e n진수\n\u003e\n```python\nprint(bin(11)) # 0b1011  2진수 1011(2)\nprint(oct(11)) # 0o13 8진수 13(8)\nprint(hex(11)) # 0xb 16진수 b(16)\n\nprint(bin(11)[:2]) # 1011  진수표시부분 지우려면 [:2]\n```\n\n## 3.예제 \n\u003e ex) 두 십진수를 비트연산해서 이진수로 변환 \n```python\nprint(bin(9|30)) # 01001(2) | 11110(2) = 11111(2)\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%ED%98%95%EB%B3%80%ED%99%98":{"title":"","content":"## 1. 하는 일\n\u003e 자료형을 바꿔준다\n\n## 2. 용법\n### 1) **파이썬 정수 변환 - int()**\n\u003e \n```python\n# 파이썬 int 타입 변환 예제\n\n# int(정수) : 정수를 정수로 변환 (가능함. 의미없음)\n\na = int(10) # 10\n\nprint(f'1. int(10) = {a}, type(a) = {type(a)}')\n\n# int(실수) : 실수를 정수로 변환\n\nb = int(3.141592) # 3\n\nprint(f'2. int(3.141592) = {b}, type(b) = {type(b)}')\n\n# int(불리언) : 불리언을 정수로 변환\n\nc = int(True) # 1\n\nprint(f'3. int(True) = {c}, type(c) = {type(c)}')\n\n# int(문자) : 문자를 정수로 변환\n\n# d = int('a') 오류 변환할 정수가 없음\n\nd = int('1') # 1\n\nprint(f'4. int(\"1\") = {d}, type(d) = {type(d)}')\n\n# int(문자열) : 문자열을 정수로 변환\n\n# e = int('blockdmask') 오류 변환할 정수가 없음\n\ne = int('112') # 112\n\nprint(f'5. int(\\'112\\') = {e}, type(e) = {type(e)}')\n\n```\n\n### 2) **파이썬 실수 변환 - float()**\n\u003e\n```python\n# 파이썬 float 타입 변환 예제\n\n# float(정수) : 정수를 실수로 변환\n\na = float(10) # 10.0\n\nprint(f'1. float(10) = {a}, type(a) = {type(a)}')\n\n# float(실수) : 실수를 실수로 변환 (가능, 의미없음)\n\nb = float(3.141592) # 3.141592\n\nprint(f'2. float(3.141592) = {b}, type(b) = {type(b)}')\n\n# float(불리언) : 불리언을 실수로 변환\n\nc = float(False) # 0.0\n\nprint(f'3. float(False) = {c}, type(c) = {type(c)}')\n\n# float(문자) : 문자를 실수로 변환\n\n# d = float('a')  # 오류 : 변환할 실수가 없음\n\nd = float('2') # 2.0\n\nprint(f'4. float(\"2\") = {d}, type(d) = {type(d)}')\n\n# float(문자열) : 문자열을 정수로 변환\n\n# e = float('blockdmask') # 오류 : 변환할 실수가 없음\n\ne = float('3434') # 3434.0\n\nprint(f'5. float(\\'3434\\') = {e}, type(e) = {type(e)}')\n\n```\n\n\n### 3)**파이썬 문자열 변환 - str()**\n\u003e\n```python\n# 파이썬 str 타입 변환 예제\n\n# str(정수) : 정수를 문자열로 변환\n\na = str(10) # 10\n\nprint(f'1. str(10) = {a}, type(a) = {type(a)}')\n\n# str(실수) : 실수를 문자열로 변환\n\nb = str(3.141592) # 3.141592\n\nprint(f'2. str(3.141592) = {b}, type(b) = {type(b)}')\n\n# str(불리언) : 불리언을 문자열로 변환\n\nc1 = str(True) # True\n\nprint(f'3-1. str(True) = {c1}, type(c1) = {type(c1)}')\n\nc2 = str(False) # \"False\"\n\nprint(f'3-2. str(False) = {c2}, type(c2) = {type(c2)}')\n\n# str(문자) : 문자를 문자열로 변환\n\nd1 = str('2') # 2\n\nprint(f'4-1. str(\"2\") = {d1}, type(d1) = {type(d1)}')\n\nd2 = str('a') # a\n\nprint(f'4-2. str(\"a\") = {d2}, type(d2) = {type(d2)}')\n\n# str(문자열) : 문자열을 문자열로 변환 (가능, 의미없음)\n\ne = str('BlockDMask') # BlockDMask\n\nprint(f'5. str(\\'3434\\') = {e}, type(e) = {type(e)}')\n\n출처: [https://blockdmask.tistory.com/432](https://blockdmask.tistory.com/432) [개발자 지망생:티스토리]\n```\n\n\n### 4)**파이썬 문자 변환 - chr()**\n\u003e\n```python\n# 파이썬 chr 타입 변환 예제\n\n# chr(정수) : 정수를 문자로 변환\n\na = chr(54) # 6 (ASCII 54번)\n\nprint(f'1. chr(54) = {a}, type(a) = {type(a)}')\n\nb = chr(55) # 7 (ASCII 55번)\n\nprint(f'2. chr(55) = {b}, type(b) = {type(b)}')\n\ni = 64\n\nwhile i \u003c= 70:\n\n    print(f'chr({i}) : {chr(i)}') # @ A B C D E F\n\n    i = i + 1\n\n# chr(실수) : 실수를 문자로 변환 - 불가능\n\n# b = chr(3.141592)\n\n# chr(불리언) : 불리언을 문자로 변환\n\n# 이 경우에는 True가 1, False가 0으로 취급되어서 가능\n\nc1 = chr(True)\n\nprint(f'3-1. chr(True) = {c1}, type(c1) = {type(c1)}')\n\nc2 = chr(1)\n\nprint(f'3-2. chr(1) = {c2}, type(c2) = {type(c2)}')\n\nif c1 == c2:\n\n    print('c1 == c2')\n\nc3 = chr(False)\n\nprint(f'3-3. chr(False) = {c3}, type(c3) = {type(c3)}')\n\nc4 = chr(0)\n\nprint(f'3-4. chr(0) = {c4}, type(c4) = {type(c4)}')\n\nif c3 == c4:\n\n    print('c3 == c4')\n\n# chr(문자) : 문자 입력 - 불가능\n\n# d1 = chr('2')\n\n# d2 = chr('a')\n\n# chr(문자열) : 문자열 입력 - 불가능\n\n# e = chr('BlockDMask')\n\n출처: [https://blockdmask.tistory.com/432](https://blockdmask.tistory.com/432) [개발자 지망생:티스토리]\n```\n\n\n### 5)**파이썬 불리언 변환 - bool()**\n\u003e\n```python\n# 파이썬 bool 타입 변환 예제\n\n# bool(정수) : 정수를 불리언으로 변환\n\na1 = bool(54) # True\n\nprint(f'1-1. bool(54) = {a1}, type(a1) = {type(a1)}')\n\na2 = bool(0) # False\n\nprint(f'1-2. bool(0) = {a2}, type(a2) = {type(a2)}')\n\n# bool(실수) : 실수를 불리언으로 변환\n\nb1 = bool(3.141592) # True\n\nprint(f'2-1. bool(3.141592) = {b1}, type(b1) = {type(b1)}')\n\nb2 = bool(0.00) # False\n\nprint(f'2-2. bool(0.00) = {b2}, type(b2) = {type(b2)}')\n\n# bool(불리언) : 불리언을 불리언으로 변환\n\nc1 = bool(True) # True\n\nprint(f'3-1. bool(True) = {c1}, type(c1) = {type(c1)}')\n\nc2 = bool(False) # False\n\nprint(f'3-3. bool(False) = {c2}, type(c3) = {type(c2)}')\n\n# bool(문자, 문자열) : 문자열을 불리언으로 변환 (비어있는지 아닌지가 중요)\n\ne = bool('BlockDMask') # True\n\nprint(f'4-1. bool(\\'BlockDMask\\') = {e}, type(e) = {type(e)}')\n\nf = bool('') # False\n\nprint(f'4-2. bool(\\'\\') = {f}, type(f) = {type(f)}')\n\n```\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/ASCII-%EA%B4%80%EB%A0%A8-%ED%95%A8%EC%88%98":{"title":"","content":"\n## 1. 하는 일\n\u003e 문자와 아스키코드를 서로 변환\n\n## 2. 용법\n### 1) ord\n\u003e 문자를 아스키로 바꿔준다\n```python\nord(\"0\") # 48\nord(\"1\") # 49\nord(\"A\") # 65\nord(\"a\") # 97\n```\n\n### 2) chr\n\u003e아스키를 문자로 바꿔준다\n```python\nchr(48) # 0\nchr(49) # 1\nchr(65) # A\nchr(97) # a\n```\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/enumerate":{"title":"","content":"## 1. 하는 일\n\u003e 리스트에서 값과 index를 둘다받고싶을때\n\n## 2. 용법\n### 1) \n\u003e \n```python\nfor i, v in enumerate(['tic', 'tac', 'toe']):\n\tprint(i, v) # 0 tic 1 tac 2 toe\n```\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/len":{"title":"","content":"## 1. 하는 일\n\u003e 객체의 길이를 구한다 (해당 자료형의 길이라고 대표할 수 있는것)\n\n## 2. 용법\n### 1) list, tuple의 길이\n\u003e 원소의 개수\n```python\nlist = [1, 2, 3]\ntuple = (1, 2, 3, 4)\nprint(\"{0}, {1}\".format(len(list), len(tuple))) # 3, 4\n```\n\n### 2) 문자열의 길이\n\u003e 문자열의 길이\n```python\ns = \"str\"\nprint(len(s)) # 3\n```\n\n### 3)딕셔너리의 길이\n\u003e 페어의 개수\n   ex) 딕셔너리의 길이 구해보기 \n```python\ndict = {\"a\":\"사과\", \"b\":\"바나나\"}\nprint(len(dict)) # 2(pair의 개수)\n```\n\n![[len함수의 numpy와 pandas에서의 쓰임.png]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/map":{"title":"","content":"## 1. 하는 일\n\u003eiterable 한 data를 func 의 인자로 넣어 나온 결과들을 iterator 형태로 반환해 주는 함수\n\n## 2. 용법\n### 1) \n\u003e \n```python\n\n```\n\n### 2) \n\u003e\n```python\n\n```\n\n## 3.예제\n\u003e\n   ex) \n```python\n\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/range":{"title":"","content":"## 1. 하는 일\n\u003e연속된 숫자의 정수를 만든다\n\n## 2. 용법\n### 1) 매개변수가 1개 일 때\n\u003e 기본값 0부터 5개\n```python\nrange(5) # [0, 1, 2, 3, 4]\n```\n\n### 2) 매개변수가 2개 일 때\n\u003e시작 숫자부터 끝 숫자 전까지\n```python\nrange(1, 5) # [1, 2, 3, 4]\n\n```\n\n## 3.예제\n\u003e자연수 N의 개수 만큼의 배열을 만들고 싶으면 range(1, N + 1)\n   ex) N이 5일 때 range(1, 5 + 1)\n```python\nrange(1, 6) # [1, 2, 3, 4, 5]\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/reduce":{"title":"","content":"## 1. 하는 일\n\u003e자료구조와 함수를 받아서 \n\u003e각 요소에 함수를 적용한 값을 만든다\n\n## 2. 용법\n\u003efrom functools import reduce\n\u003e(functools.)reduce(function, iterable[, initializer])\n\n### 1) 초기값이 숫자일 때 \n\u003e 숫자를 입력 받아서 배열로 바꾸고 짝수만 더한다\n```python\nint n = 5\nreduce(\n        lambda acc, cur: \n        acc + cur if cur % 2 == 0 else acc, \n        range(1, n + 1), \n        0\n) # 6 : 1부터 n까지의 배열에서 짝수만 더한다\n```\n\n### 2) 초기값이 리스트일 때\n\u003e  딕셔너리의 리스트를 입력 받아서\n\u003e  딕셔너리의 원소를 리스트로 출력한다\n```python\n\nusers = [{'mail': 'gregorythomas@gmail.com', \n\t\t  'name': 'Brett', 'sex': 'M', 'age': 73},\n\t\t {'mail': 'hintoncynthia@hotmail.com', \n\t\t 'name': 'Madison', 'sex': 'F', 'age': 29},\n\t\t {'mail': 'wwagner@gmail.com', 'name': 'Michael',\n\t\t  'sex': 'M', 'age': 51},\n\t\t {'mail': 'daniel79@gmail.com', 'name': 'Karen',\n\t\t  'sex': 'F', 'age': 32},\n\t\t {'mail': 'ujackson@gmail.com', 'name': 'Amber',\n\t\t  'sex': 'F', 'age': 42}\n]\n\nreduce(\n\t   lambda acc, \n\t   cur: acc + [cur[\"mail\"]], \n\t   users, \n\t   []\n) # users의 mail을 list타입으로 반환한다\n\n\n```\n\n### 3) 초기값이 딕셔너리일 때\n\u003e 딕셔너리의 리스트를 입력 받아서 \n\u003e 성별을 키로 이름을 리스트로 갖는 \n\u003e 딕셔너리의 리스트를 반환한다\n```python\ndef names_by_sex(acc, cur):\n  sex = cur[\"sex\"]\n     if sex not in acc:\n         acc[sex] = []\n     acc[sex].append(cur[\"name\"])\n     return acc\n\nreduce(\n\t   names_by_sex, \n\t   users, \n\t   {}\n)\n\n'''\nusers를 받아 성별을 키로 이름을 리스트로 갖는 \n딕셔너리의 리스트를 반환한다\n{\n\t'M': ['Brett', 'Michael'], \n\t'F': ['Madison', 'Karen', 'Amber']\n}\n'''\n\n```\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/reversed":{"title":"","content":"## 1. 하는 일\n\u003e range를 거꾸로 돌리고싶을때\n\n## 2. 용법\n### 1) \n\u003e \n```python\nfor i in reversed(range(1, 10, 2)):\n\t     print(i)\n```\n\n### 2) \n\u003e\n```python\n\n```\n\n## 3.예제\n\u003e\n   ex) \n```python\n\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/sorted":{"title":"","content":"## 1. 하는 일\n\u003e 어떤 리스트를 정렬한 새로운 리스트를 반\n\n## 2. 용법\n### 1) \n\u003e \n```python\nbasket = ['apple', 'orange', 'apple', 'pear', 'orange', 'banana']\n\tfor i in sorted(basket):\n\t    print(i) #apple apple banana orange orange pear\n```\n\n### 2) set과 함께쓰면 중복도 제거가능\n\u003e\n```python\nbasket = ['apple', 'orange', 'apple', 'pear', 'orange', 'banana']\n\tfor f in sorted(set(basket)):\n\t    print(f) #apple banana orange pear\n```\n\n### 3) 정렬 조건 바꾸기\n\u003e\n```python\nbasket = ['105', '204', '303', '402', '501']\n\tsorted(basket, key=lambda x:x[1]) # 1번째 인덱스로 정렬\n\t# ['101', '202', '303', '404', '505'] (그대로)\n\n\tsorted(basket, key=lambda x:(x[1], x[2])) \n\t# 1번째 인덱스로 정렬후 2번째 인덱스로 정렬\n\t# ['501', '402', '303', '204', '105'] (2번째 인덱스로 내림차순 정렬)\n```\n\n\n## 3.예제\n\u003e\n   ex) \n```python\n\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/sum":{"title":"","content":"## 1. 하는 일\n\u003e list, tuple의 값을 합한다\n\n## 2. 용법\n### 1) 리스트\n\u003e 원소를 더한다\n```python\nlist = [1, 2, 3, 4, 5]\nsum(list) # 15\n```\n\n### 2) 튜플\n\u003e원소를 더한다\n```python\ntuple  = (1, 2, 3, 4, 5)\nsum(tuple) # 15\n```\n\n## 3.예제\n\u003e딕셔너리를 원소로 가지는 리스트에서 각 딕셔너리를 리스트로 만들어서 더한다\n   ex) myList의 gold들을 합한 값을 출력\n```python\nmyList = [\n\t\t  {'points':100, 'gold':100},\n\t\t  {'points':300, 'gold':300}\n\t\t  ]\n\n    print(sum(item['gold'] for item in myList)) # 400\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/validation%ED%95%A8%EC%88%98":{"title":"","content":"## 1. 하는 일\n\u003e validation을 한다\n\n## 2. 용법\n### 1)  isalpha\n\u003e 알파벳으로만 이루어져있는지 확인(한글포함)\n```python\n# Appia Example for isalpha\n\n# It is to explain how to check whether the string consist of alphabet or not.\n\nEx1 = 'A'\n\nEx2 = 'ABC'\n\nEx3 = \"앱피아\"\n\nEx4 = \"Hello Appia\"\n\nEx5 = \"100Appia\"\n\n#print the is the result for isalpha()\n\nprint(Ex1.isalpha()) # True\n\nprint(Ex2.isalpha()) # True\n\nprint(Ex3.isalpha()) # True\n\nprint(Ex4.isalpha()) # False\n\nprint(Ex5.isalpha()) # False\n```\n\n### 2) isdigit\n\u003e숫자로만 이루어져 있는지 확인\n```python\n# Appia Example for isalpha\n\n# It is to explain how to check whether the string consist of digit or not.\n\nEx1 = '010-1234-5678'\n\nEx2 = '123456'\n\nEx3 = \"R4R3\"\n\nprint(Ex1.isdigit()) # Fasle\n\nprint(Ex2.isdigit()) # True\n\nprint(Ex3.isdigit()) # False\n\n```\n\n### 3)isalnum\n\u003e알파벳(한글포함) 또는 숫자로 이루어져 있는지 확인\n```python\n# Appia Example for isalpha\n\n# It is to explain how to check whether the string consist of digit/alphabet or not.\n\nEx1 = '안녕'\n\nEx2 = 'Hello3'\n\nEx3 = \"1.Where\"\n\nEx4 = \"1 Where\"\n\nprint(Ex1.isalnum()) # True\n\nprint(Ex2.isalnum()) # True\n\nprint(Ex3.isalnum()) # False\n\nprint(Ex4.isalnum()) # False\n\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/zip":{"title":"","content":"## 1. 하는 일\n\u003e 리스트 두개를 한꺼번에 같이 돌리고 싶을때\n\u003e 복수개의 iterable 객체로부터 같은 idx의 원소들을 비교할 때 쓰는 함수다\n\n## 2. 용법\n### 1)  길이가 같을때\n\u003e \n```python\nquestions = ['name', 'quest', 'favorite color']\nanswers = ['lancelot', 'the holy grail', 'blue']\n\tfor q, a in zip(questions, answers):\n\t    print('What is your {0}?  It is {1}.'.format(q, a)) # 각각의 원소\n```\n\n### 2) 딕셔너리일때\n\u003e\n```python\n\n```\n\n## 3.예제\n\u003e길이가 다를때\n   ex) 완주하지못한 선수의 경우 길이가 다른데 길이를 늘려준뒤에 순회한다\n```python\ndef solution(participant, completion):\n    completion.append(\"~\")\n    for i, j in zip(sorted(participant), sorted(completion)):\n        if i != j:\n            return i\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/%EC%82%BC%ED%95%AD%EC%97%B0%EC%82%B0%EC%9E%90":{"title":"","content":"## 1. 하는 일\n\u003e 조건에 따른 값을 한줄로 쓸 수 있게 해준다\n\n## 2. 용법\n### 1) 단독으로 쓰는 경우\n\u003e 참인경우의 값 if 조건 else 거짓인경우의 값 \n```python\n\nprint(\"True는 참\" if True else \"True는 거짓\")\n# True는 참\nprint(\"False는 참\" if False else \"False는 거짓\")\n# False는 거짓\n\n```\n\n### 2) 함께 쓰는 경우\n\u003e 참인경우의 값 if 조건 else 거짓인경우의 값 \n```python\nyear = 2000;\nisLeapYear = year%400==0 or year%4==0 and year%100\n\nprint('{0}년은 \"{1}\"입니다.'.format(year,'윤년' if isLeapYear else '평년'))\n# 2000년은 \"윤년\"입니다.\n\nprint('{0}년은 \"{1}\"년입니다.'.format(year,'홀수' if year%2 else '짝수'))\n# 2000년은 \"홀수\"년입니다.\n```\n\n## 3.예제\n\u003e 참인경우의 값 if 조건 else 거짓인경우의 값 \n   ex) 홀수인경우 Odd를 짝수인경우 Even을 반환하는 함수 작성\n```python\ndef solution(num):\n    return 'Even' if num % 2 == 0 else 'Odd'\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/args-kwargs":{"title":"","content":"## 1. 하는 일\n\u003e 갯수가 동적인 인자를 전달할때 쓴다\n\u003e \\*x형식은 튜플타입으로 순서대로 전달하고\n\u003e \\*\\*x형식은 딕셔너리타입으로 이름과함께 전달한다\n\u003e \n\n## 2. 용법\n### 1)  \\*args\n\u003e 튜플을 순서대로 전달받는다\n```python\ndef print_args(*args):\n    print(\"Positional:\", args)\n    print(\"Type:\", type(args))\n\nprint_args(1, 2)\n\n\u003e\u003e\u003e\nPositional: 1, 2\nType: \u003cclass 'tuple'\u003e\n```\n\n### 2) \\*\\*kwargs\n\u003e 딕셔너리를 순서가 달라도 이름에 맞게 전달받는다\n```python\ndef print_kwargs(**kwargs):\n    print(\"Keyword:\", kwargs)\n    print(\"Type:\", type(kwargs))\n\nprint_kwargs(foo=1, bar=2)\n\n\u003e\u003e\u003e\nKeyword: {'bar': 2, 'foo': 1}\nType: \u003cclass 'dict'\u003e\n```\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/slicing":{"title":"","content":"## 1. 하는 일\n\u003e 배열로 된 곳(문자열, 리스트, 넘파이, 벡터, 행렬 등등)에서 사용할 수 있는 자르기다\n\n## 2. 용법\n### 1) str(start, end, step)\n\u003e \n```python\ns = \"12345\"\ns[0:5:2] # 1\n```\n\n### 2) str(start, end)\n\u003e\n```python\ns = \"12345\"\ns[2:4] # 34\n```\n\n### 3)str(-n)\n\u003e 마지막 n개의 문자열 출력\n```python\ns = \"12345\"\ns[-3] # 3\ns[-3:] # 345\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/dictionary":{"title":"","content":"","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/list":{"title":"","content":"## 1. 하는 일\n\u003e 리스트타입을 가공할 수 있도록 해준다\n\n## 2. 용법\n### 1) index\n\u003e 인덱스를 찾아준다\n```python\nlist = ['Eat', 'Kim', 'Chi']\nlist.index('Kim') # 1\n```\n\n### 2) \n\u003e\n```python\n\n```\n\n## 3.예제\n\u003e\n   ex) \n```python\n\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/set":{"title":"","content":"## 1. 하는 일\n\u003e 중복을 없애준다 \n\n## 2. 용법\n### 1)  선언\n\u003e set 자료구조는 {}모양이지만 그냥 {}라고 하면 딕셔너리가 된다\n```python\na = set() # {}\n```\n\n### 2) 내장함수\n\u003e\n```python\n#추가\na.add(1) # {1}\na.add(2) # {1, 2}\n\n#삭제\na.remove(1) # {2}\n\n#리스트로 업데이트하기\na.update([3,4]) # {2, 3, 4}\n\n\n```\n\n## 3.예제\n\u003e\n   ex) \n```python\na = set([1,2,3,4])\nb = set([3,4,5,6])\n\na \u0026 b # {3, 4} (교집합)\na | b # {1, 2, 3, 4, 5, 6} (합집합)\na - b # {1, 2} (차집)\n```","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/str":{"title":"","content":"## 1. 하는 일\n\u003e 문자열 객체에 문자열을 편리하게 가공할 수 있는 \n\u003e 내장함수들이 있다 익혀두자\n\n## 2. 용법\n### 1) lower\n\u003e 문자열을 모두 소문자로 바꾼다(원본은 바꾸지않는다)\n```python\ns = \"HELLO World\"\nprint( s.lower() ) # hello world\nprint( s )         # HELLO World\n```\n\n### 2) count\n\u003e 문자열에 포함된 숫자를 센다\n```python\n'ooyyy'.count('y') # 3\n```\n\n### 3) interpoation 보간법\n\u003e 문자열과 변수를 섞어쓸 수 있도록 해준다\n```python\nname = \"hanji\"\nf\"hello {name}\" # hello hanji\n```\n\n### 4) join\n\u003e 리스트를 입력받는 기준에따라 문자열로 합친다\n```python\narr = ['1', '2', '3']\n''.join(arr) # 123\n'.'.join(arr) # 1.2.3\n'aa'.join(arr) # 1aa2aa3\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/tuple":{"title":"","content":"","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/%EC%BD%94%ED%85%8C/%EA%B0%80%EC%9A%B0%EC%8A%A4":{"title":"","content":"## 1.문제\n![[Pasted image 20221029160135.png]]\n![[Pasted image 20221029160206.png]]\n![[Pasted image 20221029160232.png]]\n\n## 2.소스\n1)내 소스\n```python\n\ndef solution(x, y):\n    tempDict = {}\n    areaArray = []\n\n    for e in y:\n        tempDict[e] = []\n\n    # 평행한 좌표 두개씩 선택\n    for e in zip(x, y):\n        tempDict[e[1]].append(e[0])\n\n    # 좌표 하나인건 없애고 세개인건 두개로 줄임\n    tempDict = dict(\n                filter(\n                    lambda x: len(x[1]) \u003e 1,\n                    tempDict.items()\n                )\n               )\n               \n    if len(tempDict.items()) == 0:\n        return 0\n\n    for e in tempDict:\n        tempDict[e] = [\n        min(tempDict[e]), max(tempDict[e])]\n\n    # 사다리꼴 공식 (윗변 + 아랫변) * 높이 / 2\n    for i in tempDict:\n        iLength = tempDict[i][1]-tempDict[i][0]\n\n        for j in tempDict:\n            jLength = tempDict[j][1] - tempDict[j][0]\n            yLength = abs(i-j)\n\n            if i != j:\n                areaArray.append(\n\t                (iLength + jLength) * yLength)\n    return max(areaArray)\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv0/%EC%A4%91%EB%B3%B5%EB%90%9C-%EC%88%AB%EC%9E%90-%EA%B0%9C%EC%88%98":{"title":"","content":"```python\nfrom functools import reduce\ndef solution(array, n):\n    return reduce(lambda acc,\n                  cur: acc + 1 if cur == n else acc,\n                  array,\n                  0\n\t\t    )\n\n```\n\n![[중복된 숫자 개수.png]]\n\n사용된 유형\n1.[[reduce]]\n2.[[range]]\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv0/%EC%A7%9D%EC%88%98%EC%9D%98-%ED%95%A9":{"title":"","content":"## 1.소스\n```python\nfrom functools import reduce\n\ndef solution(n):\n    return reduce(\n        lambda acc, \n        cur: acc + cur if cur % 2 == 0 else acc, \n        range(1, n + 1), \n        0\n    )\n```\n\n## 2.문제\n![[짝수의 합.png]]\n\n## 3.사용된 유형\n1) [[reduce]]\n2) [[range]]\n\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/1%EC%A7%9D%EC%88%98%EC%99%80-%ED%99%80%EC%88%98":{"title":"","content":"## 1.소스\n```python\ndef solution(num):\n    return 'Even' if num % 2 == 0 else 'Odd'\n```\n\n## 2.문제\n![[짝수와 홀수.png]]\n## 3.사용된 유형\n1)[[삼항연산자]]\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/10%ED%95%98%EC%83%A4%EB%93%9C%EC%88%98":{"title":"","content":"## 1.문제\n![[10하샤드수.png]]\n## 2.소스\n```python\nsolution = lambda x: x % sum(map(int, str(x))) == 0\n```\n\n## 3.설명\n\u003e문자열로 바꿔서 각 자리수를 꺼내 더한뒤 나누어떨어지는지 확인한다\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/11%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80-1%EC%9D%B4-%EB%90%98%EB%8A%94-%EC%88%98-%EC%B0%BE%EA%B8%B0":{"title":"","content":"## 1.문제\n![[나머지가 1이되는 수 찾기.png]]\n## 2.소스\n```python\ndef solution(n):        \n    return (i for i in range(1, n+1) if n % i == 1).__next__()\n\n```\n\n## 3.설명\n\u003e 제너레이터 만들어서 __next__()로 첫번째 값 호출\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/16%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C-%EA%B9%80%EC%84%9C%EB%B0%A9-%EC%B0%BE%EA%B8%B0":{"title":"","content":"## 1.문제\n![[서울에서 김서방 찾기.png]]\n## 2.소스\n1)내소스\n```python\ndef solution(seoul):\n    answer = ''\n    for i in range(0, len(seoul)):\n        s = seoul[i]\n        if s == \"Kim\":\n            return f\"김서방은 {i}에 있다\"\n    return answer\n```\n\n2)다른사람 소스\n```python\ndef findKim(seoul):\n    return \"김서방은 {}에 있다\"\n    .format(seoul.index('Kim'))\n```\n\n## 3.설명\n\u003elist에 index라는 함수가 있나본데 \n\u003e여기에 원소명을 입력하면 index가 나오나보다\n\n## 4.사용된 유형\n1)list\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/19%EC%A0%9C%EC%9D%BC-%EC%9E%91%EC%9D%80-%EC%88%98-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.문제\n![[제일 작은 수 제거하기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(arr):\n    if len(arr) == 1:\n        return [-1]\n    else :\n        arr.remove(min(arr))\n        return arr\n```\n\n2)바꾼소스\n```python\ndef solution(arr):\n    if len(arr) == 1:\n        return [-1]\n    else :\n        minimum = min(arr)\n        return list(filter(lambda x: x != minimum, arr))\n```\n\n![[제일 작은 수 제거하기 피드백.png]]\n\n## 3.설명\n\u003e 새로운 배열을 만들지 않고 원본을 수정하는것이 마음에 안들어서 바꿨다\n\u003e 근데 min(arr)을 람다식 안에 넣으니까 안되고 밖으로 빼니까 된다\n\u003e 왜그런지 모르겠다\n\n## 4.사용된 유형\n1) min\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/2%ED%8F%89%EA%B7%A0-%EA%B5%AC%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.소스\n```python\ndef solution(arr):\n    return sum(arr)/len(arr)\n```\n\n## 2.문제\n![[평균 구하기.png]]\n\n## 3.사용된 유형\n1) [[sum]]\n2) [[len]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/20%EC%9D%8C%EC%96%91%EB%8D%94%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.문제\n![[음양더하기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(absolutes, signs):\n    answer = 0\n    \n    for i in range(0, len(absolutes)):\n        if signs[i]:\n            answer += absolutes[i]\n        else :\n            answer += absolutes[i] * (-1)\n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/21%EC%97%86%EB%8A%94-%EC%88%AB%EC%9E%90-%EB%8D%94%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.문제\n![[없는 숫자 더하기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(numbers):\n    answer = 0\n    for i in range(10):\n        if numbers.count(i) == 0:\n            answer += i\n    return answer\n```\n\n2)다른사람 소스\n```python\nsolution = lambda x: sum(range(10)) - sum(x)\n```\n\n## 3.설명\n\u003e js에서는 find가 undefined라는 조건으로 찾으면 되는데\n\u003e python에서는 find가 str에서밖에 없고 list에서는 count가 0인걸로 찾았다\n\u003e다른사람 소스에서는 모두 더한값에다가 이미 있는값을 빼는식으로 계산했다\n\n\n## 4.사용된 유형\n1) count\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/22%EA%B0%80%EC%9A%B4%EB%8D%B0%EA%B8%80%EC%9E%90-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0":{"title":"","content":"## 1.문제\n![[가운데글자 가져오기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(s):\n    std = int(len(s)/2)\n    if len(s) % 2 == 0:\n        return s[std-1:std+1]\n    else :\n        return s[std]\n```\n\n2)다른사람 소스\n```python\nsolution = lambda s: s[(len(s) - 1) // 2 : len(s) // 2 + 1]\n```\n\n## 3.설명\n\u003eslicing을 사용하는 방법을 배울 수 있는 좋은문제인것같다\n\u003e이거는 나중에도 많이 쓸것 같으니 한번 정리해보자\n\n## 4.사용된 유형\n1) 문자열 slicing\n2) // (/은 나누기 //은 몫 )","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/23%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98":{"title":"","content":"## 1.문제\n![[수박수박수.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(n):\n    answer = ''\n    for i in range(n):\n        answer += '수' if i % 2 == 0 else '박'\n    return answer\n```\n\n2)다른사람 소스\n```python\ndef water_melon(n):\n    s = \"수박\" * n\n    return s[:n]\n\n```\n\n## 3.설명\n\u003e\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/24%EB%82%B4%EC%A0%81":{"title":"","content":"## 1.문제\n![[24내적.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(a, b):\n    answer = 0\n    for (ela, elb) in zip(a, b):\n        answer += ela * elb\n    return answer\n```\n\n2)다른사람 소스\n```python\nsolution = lambda x, y: sum(a*b for a, b in zip(x, y))\n```\n\n```python\nimport numpy as np\ndef solution(a, b): return int(sum(np.array(a) * np.array(b)))\n```\n\n## 3.설명\n\u003e 두 배열을 묶어서 순회하는 zip을 사용했다\n\u003e 람다를 사용한 비슷한방법과 넘파이를 사용한 방법도 있었다\n\n## 4.사용된 유형\n1)[[zip]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/25%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.문제\n![[문자열 내림차순으로 배치하기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(s):\n    return ''.join(sorted(s, reverse=True))\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e문자열을 리스트로만들어 내림차순으로 정렬해서 join으로 다시 문자열로 만들었다\n\n## 4.사용된 유형\n1)[[str]](join)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/26-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8B%A4%EB%A3%A8%EA%B8%B0-%EA%B8%B0%EB%B3%B8":{"title":"","content":"## 1.문제\n![[문자열 다루기 기본.png]]\n## 2.소스\n1)내 소스\n```python\nsolution = lambda x : (len(x) == 4 or len(x) == 6) and x.isdigit()\n```\n\n2)다른사람 소스\n```python\ndef alpha_string46(s):\n    if len(s) \u003c 4 or len(s) \u003e 6:\n        return False\n\n    f = True\n    for c in s:\n        if ord(c) \u003c 48 or ord(c) \u003e 57:\n            f = False\n    return f\n```\n\n## 3.설명\n\u003e아스키코드로 확인해도 되는데 그거는 파이써닉이 아니다\n\u003e ord(), chr()함수로 아스키코드로 확인한 코드도 있다\n\n## 4.사용된 유형\n1)[[validation함수]](isdigit)\n2)[[ASCII 관련 함수]]\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/28%EB%B6%80%EC%A1%B1%ED%95%9C-%EA%B8%88%EC%95%A1-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.문제\n![[부족한금액계산하기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(price, money, count):\n    leftMoney = money - sum(i * price for i in range(1, count + 1))\n    \n    if leftMoney \u003e 0:\n        return 0\n    else:\n        return abs(leftMoney)\n```\n\n2)다른사람 소스\n```python\ndef solution(price, money, count):\n    return abs(min(money - \n    sum([price*i for i in range(1,count+1)]),0))\n```\n\n## 3.설명\n\u003e 얼마나 부족한지 계산한 값에서 절대값을 취해준다\n\u003e 다른사람이 작성한 소스는 돈이 충분해서 양수가 나오면\n\u003e 0을 리턴하고 돈이 부족해서 음수가 나오면 음수값에 절대값을 취해서 답이 나온다 이거 깔끔한것같다\n\n## 4.사용된 유형\n1)[[수학관련함수]](abs)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/29%ED%96%89%EB%A0%AC%EC%9D%98%EB%8D%A7%EC%85%88":{"title":"","content":"## 1.문제\n\n## 2.소스\n1)내 소스\n```python\ndef solution(arr1, arr2):\n    answer = []\n    for row in range(len(arr1)):\n        tempRow = []\n        for col in range(len(arr1[0])):\n            tempRow.append(arr1[row][col] + arr2[row][col])\n        answer.append(tempRow)\n    return answer\n```\n\n2)다른사람 소스\n```python\ndef sumMatrix(A,B):\n    return [list(map(sum, zip(*x))) \n\t\t\tfor x in zip(A, B)]\n```\n\n## 3.설명\n\u003e 나는 로우를 만들어서 차례대로 넣는 방식을 썼다\n\u003e 다른사람 소스는 A,B가 크기가 같으므로\n\u003e 각각의 행렬을 동시에 돌리면서 원소의 크기도 같으니까\n\u003e 원소를 돌면서 합해줬다\n\n## 4.사용된 유형\n1) [[zip]]\n2) [[args, kwargs]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/3%EC%95%BD%EC%88%98%EC%9D%98-%ED%95%A9":{"title":"","content":"## 1.소스\n```python\ndef solution(n):\n    sum = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            sum += i\n    return sum\n```\n\n## 2.문제\n![[약수의 합.png]]\n\n## 3. 설명\n\u003e 정수 n만큼의 범위인 range(1, n+1)을 순회하면서\n\u003e 나누어 떨어지는 값을 모아서 더한 값을 출력\n\n\n## 4.사용된 유형\n1) [[range]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/34%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98":{"title":"","content":"## 1.문제\n![[34최대공약수와최소공배수.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(n, m):\n    gcd = lcm = 0\n    \n    # 최대공약수\n    for i in range(max(n,m), 0, -1):\n        if n % i == 0 and m % i == 0:\n            gcd = i\n            break\n    \n    # 최소공배수\n    for i in range(max(n, m), (n * m) + 1):\n        if i % n == 0 and i % m == 0:\n            lcm = i\n            break\n            \n    return [gcd, lcm]\n```\n\n2)다른사람 소스\n```python\ndef gcdlcm(a, b):\n    c, d = max(a, b), min(a, b)\n    t = 1\n    while t \u003e 0:\n        t = c % d\n        c, d = d, t\n    answer = [c, int(a*b/c)]\n    return answer\n```\n\n## 3.설명\n\u003e 나는 그냥 제일큰수부터 밑으로 내려오면서 동시에 나눠지는 첫번째 수를 최대공약수 \n\u003e 그리고 제일 큰수부터 둘을 곱한수까지 위로 올라가면서 \n\u003e 그 수에 m과 n이 나누어떨어지는지를 최소공배수로 구했다\n\u003e \n\u003e 근데 유클리드호제법이라는게 있나보다\n\u003e 이걸쓰면 시간복잡도가 가장 낮지는 않지만 충분히 낮다고 한다\n\n![[유클리드호제법.png]]\n\n## 4.사용된 유형\n1)[[최대공약수와 최소공배수 구하기]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/35-3%EC%A7%84%EB%B2%95%EB%92%A4%EC%A7%91%EA%B8%B0":{"title":"","content":"## 1.문제\n![[3진법뒤집기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(n):\n    # 뒤집힌 3진법으로 바꾸기\n    threeN = []\n    while n \u003e 0:\n        threeN.append(n % 3)\n        n = n//3  \n    # 10진법으로 바꾸기\n    tenN = 0;\n    for i, v in enumerate(threeN):\n        tenN += v * 3 ** (len(threeN) - (i+1)) \n    return tenN\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e 진법변환부분을 모르겠어서 검색했다\n\n## 4.사용된 유형\n1)[[진법변환개념]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/36%EC%98%88%EC%82%B0":{"title":"","content":"## 1.문제\n![[36예산.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(d, budget):\n    for i, v in enumerate(sorted(d)):\n        print(\"지원부서개수 : \", i, \"남은금액 : \", budget)\n        if budget - v \u003c 0:\n            return i\n        elif budget - v == 0:\n            return i+1\n        else:\n            budget -= v\n    return len(d)\n```\n\n2)다른사람 소스\n```python\ndef solution(d, budget):\n    s = 0\n    j = 0\n    d.sort()\n    for i in range(len(d)):\n        s += d[i]\n        if s \u003e budget:\n            break\n        else:\n            j += 1\n    return j\n```\n\n## 3.설명\n\u003e 나는 그냥 계속 제출하면서 답이될때까지 풀었다\n\u003e 다른사람 소스는 sum이 budged보다 크면 그만두고\n\u003e 아니면 계속 더하다가\n\u003e 루프끝나고 리턴한다\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/37-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84":{"title":"","content":"## 1.문제\n![[37 비밀지도.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(n, arr1, arr2):\n    answer = []\n    \n    for i in range(n):\n        tmp = bin(arr1[i] | arr2[i])\n        tmp = tmp[2:].zfill(n)\n        tmp = tmp.replace('1','#').replace('0',' ')\n        answer.append(tmp)\n    \n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e 비트연산 문제다\n\n## 4.사용된 유형\n1)[[진법변환]]\n2)[[빈칸채우기]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/38-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.문제\n![[38문자열 내 마음대로 정렬하기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(strings, n):\n    return sorted(strings, key=lambda x: (x[n], x))\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e소트할때 튜플형태로 넣으면 우선순위로 정렬할 수 있다\n\n## 4.사용된 유형\n1)[[sorted]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/39-K%EB%B2%88%EC%A7%B8%EC%88%98":{"title":"","content":"## 1.문제\n![[39 K번째수.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(array, commands):\n    answer = [] \n    for c in commands:\n        [i, j, k] = c\n        answer.append(sorted(array[i-1:j])[k-1])\n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e슬라이싱 할때 애먹었다 i부터 j면 j까지 포함이 아니라 j직전까지다\n\u003e그러니까 5번째 원소를 남기려면 a[4:4]라고 하면 원소가 없고 \n\u003ea[4:5]라고 해야 인덱스 4의 5번째 원소가 남는다\n\n## 4.사용된 유형\n1)[[slicing]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/4%EC%9E%90%EB%A6%BF%EC%88%98-%EB%8D%94%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.문제\n![[자릿수 더하기.png]]\n## 2.소스\n```python\nfrom functools import reduce\ndef solution(n):\n    return reduce(\n        lambda acc, \n        cur: acc + int(cur), \n        str(n), \n        0\n    )\n```\n\n## 3.설명\n\u003e숫자를 문자열로 바꿔서 각 자리를 숫자로 바꾼뒤 더한다\n\n## 4.사용된 유형\n1) [[형변환]]\n2) [[reduce]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/40-%EB%91%90-%EA%B0%9C-%EB%BD%91%EC%95%84%EC%84%9C-%EB%8D%94%ED%95%98%EA%B8%B0":{"title":"","content":"## 1.문제\n![[40 두 개 뽑아서 더하기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(numbers):\n    answer = set()\n    length = len(numbers)\n    for i in range(length):\n        for j in range(length):\n            if i != j:\n                answer.add(numbers[i]+numbers[j])\n    return sorted(list(answer))\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003eset 사용해서 중복없이 정렬하면된다\n\n## 4.사용된 유형\n1)[[set]]\n2)[[sorted]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/41-%EC%82%BC%EC%B4%9D%EC%82%AC":{"title":"","content":"## 1.문제\n![[41 삼총사.png]]\n## 2.소스\n1)내 소스\n```python\nfrom itertools import combinations\ndef solution(number):\n    answer = 0\n    for t in list(combinations(number,3)):\n        if sum(t) == 0:\n            answer += 1\n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e 합은 순서가 달라져도 변화가 없으니까 조합이다\n\n## 4.사용된 유형\n1)[[순열과조합]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42-2016%EB%85%84":{"title":"","content":"## 1.문제\n![[42 2016년.png]]\n## 2.소스\n1)내 소스\n```python\n\n```\n\n2)다른사람 소스\n```python\ndef solution(a, b):\n    answer = 0\n    days = ['FRI','SAT','SUN','MON','TUE','WED','THU']\n    months = [31, 29, 31, 30, 31, 30,31, 31, 30, 31, 30, 31]\n    \n    for i in range(a-1):\n        answer += months[i]\n    \n    answer += b-1\n    answer = answer%7\n    \n    return days[answer]\n```\n\n## 3.설명\n\u003e이거 못풀었고 답봤다\n\u003e윤년이라는 이야기를 했는데 윤년과 아닌것의 차이는\n\u003e윤년이면 2월이 29일 윤년이 아니면 2월이 28일이다\n\u003e1월 1일이 금요일이니까 요일배열에 FRI부터 시작해서\n\u003e나머지로 출력하면 된다\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/43-%ED%8F%B0%EC%BC%93%EB%AA%AC":{"title":"","content":"## 1.문제\n![[43 폰켓몬.png]]\n## 2.소스\n1)내 소스\n```python\n\n```\n\n2)다른사람 소스\n```python\ndef solution(nums):\n    unique_types = len(set(nums))\n\n    if len(nums) / 2 \u003e unique_types:\n        return unique_types\n    else:\n        return len(nums) / 2\n```\n\n## 3.설명\n\u003e못풀었다\n\u003e중복이 존재하는 짝수길이의 배열에서 \n\u003e배열길이/2 만큼의 숫자를 뽑을때 서로다른 숫자의 \n\u003e최대값을 구하는 문제다\n\u003e\n\u003e배열에서 서로다른 숫자가 N/2보다 작으면\n\u003e어쩔수 없이 항상 서로다른 숫자만큼 뽑게되고\n\u003e서로다른 숫자가 N/2보다 같거나 크면 N/2가 최대값이 된다\n\u003e\n\u003e즉 서로다른 숫자의 개수와 N/2중에 더 작은값을 리턴하면된다\n\n\n\n\n## 4.사용된 유형\n1)[[set]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/44-%EC%86%8C%EC%88%98%EC%B0%BE%EA%B8%B0":{"title":"","content":"## 1.문제\n![[44 소수찾기.png]]\n## 2.소스\n1)내 소스\n```python\n\n```\n\n2)다른사람 소스\n```python\ndef solution(n):\n    a = [False,False] + [True]*(n-1)\n    primes=[]\n\n    for i in range(2,n+1):\n        if a[i]:\n            primes.append(i)\n        for j in range(2*i, n+1, i):\n            a[j] = False\n    return len(primes)\n```\n\n## 3.설명\n\u003e 에라토스테네스의 체 찾아봤다\n\n## 4.사용된 유형\n1)[[소수]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/45-N%EC%A7%84%EC%88%98-%EA%B2%8C%EC%9E%84":{"title":"","content":"```python\ndef TenToN(number, n):\n    if number == 0:\n        return \"0\"\n    transArr = []\n    n_dict = {\n        0:\"0\", 1:\"1\", 2:\"2\", 3:\"3\", 4:\"4\", 5:\"5\", \n        6:\"6\", 7:\"7\",8:\"8\", 9:\"9\", 10:\"A\", \n        11:\"B\", 12:\"C\", 13:\"D\", 14:\"E\", 15:\"F\"\n    }\n    \n    while number \u003e 0:\n        transArr.append(n_dict[number % n])\n        number = number//n\n    return \"\".join(reversed(transArr))\n    \ndef solution(n, t, m, p):\n    answer = ''\n    print(n, t, m, p)\n    \n    # 2진법에서 16진법까지 바꾸기\n    fullWord = \"\"\n    for i in range(0, (t * m) + 1):\n        if len(fullWord) \u003e (t * m):\n            break\n        fullWord += TenToN(i, n)\n    print(\"fullWord: \", fullWord)    \n    \n    for i, v in enumerate(fullWord):\n        print((i+1)%m-p)\n        if len(answer) == t:\n            break\n        if (i+1)%m-p==0:\n            answer+=v\n    return answer\n```\n\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/49%EC%8B%A4%ED%8C%A8%EC%9C%A8":{"title":"","content":"## 1.문제\n![[49실패율.png]]\n## 2.소스\n1)내 소스\n```python\n\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/5%EC%A0%95%EC%88%98-%EC%A0%9C%EA%B3%B1%EA%B7%BC-%ED%8C%90%EB%B3%84":{"title":"","content":"## 1.문제\n![[정수 제곱근 판별.png]]\n## 2.소스\n```python\ndef solution(n):\n    for i in range(1, n+1):\n        if i ** 2 == n:\n            return (i+1) ** 2\n    return -1\n```\n\n## 3.설명\n\u003e받은 숫자로 range(1, n+1)를 만들어서\n\u003e제곱해서 그 수가 만들어지면 1더해서 제곱한것을 리턴하고\n\u003e포문을 다 돌아도 없으면 -1을 리턴한다\n\n## 4.사용된 유형\n1) [[range]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/50%EB%8B%A4%ED%8A%B8%EA%B2%8C%EC%9E%84":{"title":"","content":"## 1.문제\n![[50다트게임1.png]]\n![[50다트게임2.png]]\n## 2.소스\n\n1)내 소스\n```python\n\n```\n\n2)다른사람 소스\n```python\ndef solution(dartResult):\n    n = ''\n    score = []\n    for i in dartResult:\n        if i.isnumeric():\n            n += i\n        elif i == 'S':\n            n = int(n)**1\n            score.append(n)\n            n = ''\n        elif i == 'D':\n            n = int(n)**2\n            score.append(n)\n            n = ''\n        elif i == 'T':\n            n = int(n)**3\n            score.append(n)\n            n = ''\n        elif i == '*':\n            if len(score) \u003e 1:\n                score[-2] = score[-2] * 2\n                score[-1] = score[-1] * 2\n            else:\n                score[-1] = score[-1] * 2\n        elif i == '#':\n            score[-1] = score[-1] * -1\n        \n    return sum(score)\n```\n\n## 3.설명\n\u003e 이전에 있는 값을 사용하는 문제였는데\n\u003e 나는 그냥 전체의 합을 지속적으로 구해가려고 하다가 못풀었다\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/51%EB%A1%9C%EB%98%90%EC%9D%98%EC%B5%9C%EA%B3%A0%EC%88%9C%EC%9C%84%EC%99%80%EC%B5%9C%EC%A0%80%EC%88%9C%EC%9C%84":{"title":"","content":"## 1.문제\n![[51로또의최고순위와최저순위.png]]\n## 2.소스\n1)내 소스\n```python\n\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/52-%EC%BD%9C%EB%9D%BC%EB%AC%B8%EC%A0%9C":{"title":"","content":"## 1.문제\n![[52콜라문제.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(a, b, n):\n    answer = 0\n    \n    while n \u003e= a:\n        mod = n % a # 콜라를 교환하고 남은 빈 병의 개수\n        n = (n//a) * b # 교환한 콜라의 개수\n        answer += n # 총 콜라 수\n        n += mod # 빈병이 된 콜라에 교환하고 남은 빈 병의 개수를 더해서 바꿀때 사용한다\n        \n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e 이거 못풀고 다른사람 소스 봤다 \n\u003e 소스는 거의 같았는데 와일문의 3,4라인이 바뀌어 있었다\n\u003e 이 문제를 못푼 이유는 콜라의 개수를 answer에 더하기전에 빈병을 합해서 더해서 그런듯하다\n\u003e 즉 콜라를 새로 교환하기전에 빈병을 더해버려서 생겼다\n\u003e 한단계만 더 조건을 추가했으면 됐었다\n\u003e 문제를 뭉뚱그리지 말고 한단계씩 차근차근 생각하자\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/53-%EC%B2%B4%EC%9C%A1%EB%B3%B5":{"title":"","content":"## 1.문제\n![[53체육복.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(n, lost, reserve): \n    answer = 0 \n    \n    # 여분의 체육복이 있었지만 도난당한사람을 제외한다\n    reserve_del = set(reserve)-set(lost) \n    lost_del = set(lost)-set(reserve) \n    \n    # 앞쪽인덱스부터 자기 다음번호나 앞번호에 잃어버린 사람이 있으면 list에서 지운다\n    for i in reserve_del: \n        if i-1 in lost_del: \n            lost_del.remove(i-1) \n        elif i+1 in lost_del: \n            lost_del.remove(i+1) \n    \n    # 총 숫자에서 잃어버린 사람에게 빌려준 사람을 다 지운 lost_del의 길이만큼 빼면\n    # 체육 수업을 들을 수 있는 학생의 최대값이다\n    answer = n - len(lost_del)\n    \n    \n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e이거 못풀었다 어려웠다\n\u003e그래도 이해는 다 했다\n\u003e이해하면서 실력이 느는수도 있지만\n\u003e이해가 안되면 암기하면서 이해가 되고 내실력이 되는방향도 있다\n\u003e꾸준하게 하자\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/54-%EC%99%84%EC%A3%BC%ED%95%98%EC%A7%80%EB%AA%BB%ED%95%9C%EC%84%A0%EC%88%98":{"title":"","content":"## 1.문제\n![[54완주하지못한선수.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(participant, completion):\n    completion.append(\"~\")\n    for i, j in zip(sorted(participant), sorted(completion)):\n        if i != j:\n            return i\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e정렬해서 서로 다른이름이 있으면 완주하지 못한 참가자이므로 리턴한다\n\u003ezip함수는 길이가 다르면 짧은쪽으로 돌기때문에 \n\u003e완주자를 알파벳 소문자 이후의 아스키로 한칸 늘려준다\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/55-%ED%91%B8%EB%93%9C%ED%8C%8C%EC%9D%B4%ED%8A%B8%EB%8C%80%ED%9A%8C":{"title":"","content":"## 1.문제\n![[55푸트파이트대회.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(food):\n    answer = ''\n    \n    half = \"\"\n    for i, v in enumerate(food[1:]):\n        for j in range(v//2):\n            half += str(i+1)\n    \n    answer = half + '0' + half[::-1]\n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e뒤집는거 []::-1]\n\n## 4.사용된 유형\n1) [[slicing]]\n2) [[enumerate]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/56-%ED%82%A4%ED%8C%A8%EB%93%9C%EB%88%84%EB%A5%B4%EA%B8%B0":{"title":"","content":"## 1.문제\n![[56키패드누르기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(numbers, hand):\n    answer = ''\n    \n    #거리를 측정하기 위해 좌표로 변환\n    coordinate = {\n        '1':[0,3], '2':[1,3], '3':[2,3],\n        '4':[0,2], '5':[1,2], '6':[2,2],\n        '7':[0,1], '8':[1,1], '9':[2,1],\n        '*':[0,0], '0':[1,0], '#':[2,0],\n    }\n    currentL = coordinate['*']\n    currentR = coordinate['#']\n    for i in numbers:\n        print(\"===\",i,\"===\")\n        if i == 1 or i == 4 or i == 7:\n            answer += 'L'\n            currentL = coordinate[str(i)]\n        elif i == 3 or i == 6 or i == 9:\n            answer += 'R'\n            currentR = coordinate[str(i)]\n        else:\n            # 2,5,8,0 키패드와 각 엄지손가락의 거리 측정\n            target = coordinate[str(i)]\n            \n            distanceR = abs(target[0]-currentR[0]) + abs(target[1]-currentR[1])\n            distanceL = abs(target[0]-currentL[0]) + abs(target[1]-currentL[1])\n            \n            if distanceR \u003e distanceL:\n                answer += 'L'\n                currentL = coordinate[str(i)]\n            elif distanceR \u003c distanceL:\n                answer += 'R'\n                currentR = coordinate[str(i)]\n            else:\n                if hand == 'right':\n                    answer += 'R'\n                    currentR = coordinate[str(i)]\n                else :\n                    answer += 'L'\n                    currentL = coordinate[str(i)]\n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e좌표개념으로 거리를 재는것이 중요한 문제다\n\u003e저번에는 한번에 떠올랐던것 같은데 이번에는 풀이보다가 생각났다\n\u003e\n\u003e내가 너무 길게 풀었나 했는데 \n\u003e분기세번은 꼭 들어가야해서 풀이 답은 다 비슷하게 길다\n\n## 4.사용된 유형\n1)[[수학관련함수]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/57-%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98-%EB%AC%B4%EA%B8%B0":{"title":"","content":"## 1.문제\n![[57기사단원의 무기.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(number, limit, power):\n    answer = 0\n    \n    for i in range(1, number + 1):\n        divisor = 0\n        for j in range(1, int(i**(1/2))+1):\n            if i%j == 0:\n                divisor += 1\n                if ((j**2) != i) :\n                    divisor +=1\n        print(divisor)\n        if divisor \u003e limit:\n            answer += power\n        else:\n            answer += divisor\n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e약수구하는데는 성공했지만\n\u003e전체를 다구하니까 시간복잡도로 실패했다\n\u003e약수를 더 빠르게 구하는 답을 찾아서 이걸로 통과했다\n\n## 4.사용된 유형\n1)[[약수의 개수 구하기]]\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/58-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84":{"title":"","content":"## 1.문제\n![[58크레인인형뽑기게임.png]]\n## 2.소스\n1)내 소스\n```python\ndef solution(board, moves):\n    answer = 0\n    bucket = []\n    for i in moves:\n        # 인형집기 시작\n        for j in board:\n            if j[i-1] != 0:\n                # 집은 인형 : j[i-1]\n                bucket.append(j[i-1])\n                j[i-1] = 0\n                break\n        #바구니 길이\n        length = len(bucket)\n        if length \u003e 1:\n            if bucket[length-1] == bucket[length-2]:\n                # 가장 마지막 두 인형이 같으면 제거하고 카운트\n                answer+=2\n                bucket.pop()\n                bucket.pop()\n    return answer\n```\n\n2)다른사람 소스\n```python\n\n```\n\n## 3.설명\n\u003e크레인으로 집은 인형들을 바구니에 쌓으면서 \n\u003e동일한 인형이면 지우고 카운트 하는 문제다\n\u003e구현문제다\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/6%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0":{"title":"","content":"## 1.문제\n![[자연수 뒤집어 배열로 만들기.png]]\n## 2.소스\n```python\ndef solution(n):\n    return list(map(int,reversed(str(n))))\n```\n\n## 3.설명\n\u003e숫자를 문자열로 바꾸고\n\u003ereversed로 뒤집고\n\u003eint 형식으로 다시 바꿔서\n\u003e리스트로 만들어 리턴한다\n\n## 4.사용된 유형\n1) [[형변환]]\n2) [[map]]","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/7%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%9C%EC%88%98":{"title":"","content":"## 1.문제\n![[문자열 내 p와 y의 개수.png]]\n## 2.소스\n```python\n\ndef solution(s):\n    pCount = 0\n    yCount = 0\n    for i in range(0, len(s)):\n        if (s[i] == \"p\") | (s[i] == \"P\") :\n            pCount += 1\n        elif (s[i] == \"y\") | (s[i] == \"Y\") :\n            yCount += 1\n            \n    if pCount == yCount:\n        return True\n    elif pCount != yCount:\n        return False\n    elif pCount == 0 \u0026 yCount == 0:\n        return True\n\n```\n\n다른사람 소스\n```python\ndef numPY(s):\n    return s.lower().count('p') \n\t    == s.lower().count('y')\n\n\n```\n\n## 3.설명\n\u003e\n\n## 4.사용된 유형\n1) [[str]] (lower, count)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/8%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98%EC%99%80-%EB%8D%A7%EC%85%88":{"title":"","content":"## 1.문제\n![[약수의 개수와 덧셈.png]]\n## 2.소스\n```python\ndef solution(left, right):\n    answer = 0\n    for i in range(left, right + 1):\n        divisorCount = 0\n        for j in range(1, i + 1):\n            if i % j == 0:\n                divisorCount += 1\n        if divisorCount % 2 == 0:\n            answer += i\n        else :\n            answer -= i\n    return answer\n        \n```\n\n## 3.설명\n\u003eleft부터 right까지 숫자를 돌면서 \n\u003e해당 숫자의 약수의 개수가 짝수면 숫자를 더하고\n\u003e해당 숫자의 약수의 개수가 홀수면 숫자를 뺀다\n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/9%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95":{"title":"","content":"## 1.문제\n![[최소직사각형.png]]\n## 2.소스\n```python\ndef solution(sizes):\n    return \n\t    max(max(x) for x in sizes) \n\t    * max(min(x) for x in sizes)\n```\n\n## 3.설명\n\u003e 명함의 가로세로를 바꿀 수 있다는점이 까다로운데\n\u003e 명함의 긴쪽을 모으고 짧은쪽을 모아서 \n\u003e 각각의 최대값을 곱해주면 된다 \n\n## 4.사용된 유형\n1)\n2)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (测试)","content":"\n## Chinese, Japanese, Korean Support\n几乎在我们意识到之前，我们已经离开了地面。\n\n우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.\n\n私たちがそれを知るほぼ前に、私たちは地面を離れていました。\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = -1$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/How+to/Use+callouts#Types).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to render mermaid diagrams\nenableMermaid: true\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nsearch:\n  enableSemanticSearch: false\n  operandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n  operandIndexId: \"REPLACE-WITH-YOUR-OPERAND-INDEX-ID\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"🪴 Quartz 3.3\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'مدونتي'\n    weight = 1\n```\n","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/docker":{"title":"Hosting with Docker","content":"\nIf you want to host Quartz on a machine without using a webpage hosting service, it may be easier to [install Docker Compose](https://docs.docker.com/compose/install/) and follow the instructions below than to [install Quartz's dependencies manually](notes/preview%20changes.md).\n## Hosting Quartz Locally\nYou can serve Quartz locally at `http://localhost:1313` with the following script, replacing `/path/to/quartz` with the \nactual path to your Quartz folder.\n\ndocker-compose.yml\n```\nservices:\n  quartz-hugo:\n    image: ghcr.io/jackyzha0/quartz:hugo\n    container_name: quartz-hugo\n    volumes:\n      - /path/to/quartz:/quartz\n    ports:\n      - 1313:1313\n\n    # optional\n    environment:\n      - HUGO_BIND=0.0.0.0\n      - HUGO_BASEURL=http://localhost\n      - HUGO_PORT=1313\n      - HUGO_APPENDPORT=true\n      - HUGO_LIVERELOADPORT=-1\n```\n\nThen run with: `docker-compose up -d` in the same directory as your `docker-compose.yml` file.\n\nWhile the container is running, you can update the `quartz` fork with: `docker exec -it quartz-hugo make update`.\n\n## Exposing Your Container to the Internet\n\n### To Your Public IP Address with Port Forwarding (insecure)\n\nAssuming you are already familiar with [port forwarding](https://en.wikipedia.org/wiki/Port_forwarding) and [setting it up with your router model](https://portforward.com):\n\n1. You should set the environment variable `HUGO_BASEURL=http://your-public-ip` and then start your container.\n2. Set up port forwarding on your router from port `p` to `your-local-ip:1313`.\n3. You should now be able to access Quartz from outside your local network at `http://your-public-ip:p`.\n\nHowever, your HTTP connection will be unencrypted and **this method is not secure**.\n\n### To a Domain using Cloudflare Proxy\n\n1. Port forward 443 (HTTPS) from your machine.\n2. Buy a custom domain (say, `your-domain.com`) from [Cloudflare](https://www.cloudflare.com/products/registrar/). Point a DNS A record from `your-domain.com` to your public IP address and enable the proxy.\n3. Set the environment variables `HUGO_BASEURL=https://your-domain.com`, `HUGO_PORT=443`, and `HUGO_APPENDPORT=false`. Change `1313:1313` to `443:443` for the `ports` in `docker-compose.yml`.\n4. Spin up your Quartz container and enjoy it at `https://your-domain.com`!\n\n### To a Domain using a Reverse Proxy\n\nIf you want to serve more than just Quartz to the internet on this machine (or don't want to use the Cloudflare registrar and proxy), you should follow the steps in the section above (as appropriate) and also set up a reverse proxy, like [Traefik](https://doc.traefik.io/traefik). Be sure to configure your TLS certificates too!\n","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\nYou can also use wikilinks if that is what you are more comfortable with!\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e 🔗 Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n❌ [Excluding pages from being published](notes/ignore%20notes.md)\n\n## Docker Support\nIf you don't want to use a hosting service, you can host using [Docker](notes/docker.md) instead!\nI would *not use this method* unless you know what you are doing.\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: 🎨 [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2023-02-01T02:44:28.329537227Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\nOpen Settings \u003e Files \u0026 Links and look for these two items:\n\n1. Set the **New link format** to **Absolute Path in vault**.\n2. Turn **on** the **Automatically update internal links** setting.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e 👀 Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e “[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.” — Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, the following\ninstructions guide you through installing the proper dependencies to run it locally.\n\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e [!INFO] Docker Support\n\u003e\n\u003e If you have Docker installed already, open your terminal, navigate to your folder with Quartz and run `make docker`\n\nNow that you are happy with how your Quartz instance looks, let's get it hosted!\n\n\u003e 🌍 Step 5: [Hosting Quartz online!](notes/hosting.md)\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://beta.operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Login or Register for a new Operand account. Click the verification link sent to your email, and you'll be redirected to the dashboard. (Note) You do not need to enter a credit card to create an account, or get started with the Operand API. The first $10 of usage each month is free. To learn more, see pricing. If you go over your free quota, we'll (politely) reach out and ask you to configure billing.\n2. Create your first index. On the dashboard, under \"Indexes\", enter the name and description of your index, and click \"Create Index\". Note down the ID of the index (obtained by clicking on the index name in the list of indexes), as you'll need it in the next step. IDs are unique to each index, and look something like `uqv1duxxbdxu`.\n3. Click into the index you've created. Under \"Index Something\", select \"SITEMAP\" from the dropdown and click \"Add Source\".\n4. For the \"Sitemap.xml URL\", put your deployed site's base URL followed by `sitemap.xml`. For example, for `quartz.jzhao.xyz`, put `https://quartz.jzhao.xyz/sitemap.xml`. Leave the URL Regex empty. \n5. Get your API key. On the dashboard, under \"API Keys\", you can manage your API keys. If you don't already have an API key, click \"Create API Key\". You'll need this for the next step.\n6. Open `data/config.yaml`. Set `enableSemanticSearch` to `true`, `operandApiKey` to your copied key, and `operandIndexId` to the ID of the index we created from earlier..\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nsearch:\n  enableSemanticSearch: true\n  operandApiKey: \"jp9k5hudse2a828z98kxd6z3payi8u90rnjf\"\n  operandIndexId: \"s0kf3bd6tldw\"\n```\n7. Push your changes to the site and wait for it to deploy.\n8. Check the Operand dashboard and wait for your site to index. Enjoy natural language search powered by Operand!\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\n📁 [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ✏️ Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n- [Data Dictionary 🧠](https://glossary.airbyte.com/)\n- [sspaeti.com's Second Brain](https://brain.sspaeti.com/)\n- [oldwinterの数字花园](https://garden.oldwinter.top/)\n- [SethMB Work](https://sethmb.xyz/)\n- [Abhijeet's Math Wiki](https://abhmul.github.io/quartz/Math-Wiki/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/test":{"title":"테스트","content":"\n## Configuration\n\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true\n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true\n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to render mermaid diagrams\nenableMermaid: true\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nsearch:\n  enableSemanticSearch: false\n  operandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n  operandIndexId: \"REPLACE-WITH-YOUR-OPERAND-INDEX-ID\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title: \"🪴 Quartz 3.3\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\n\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n   ```yaml {title=\"data/config.yaml\", linenos=false}\n   enableCodeBlockTitle: true\n   ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n   ````markdown {linenos=false}\n   ```yaml {title=\"data/config.yaml\"}\n   enableCodeBlockTitle: true # example from step 1\n   ```\n   ````\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\n\nIf you would like to customize the favicons of your Quartz-based website, you\ncan add them to the `data/config.yaml` file. The **default** without any set\n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\" /\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your\n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the\n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your\nwebpage to the home screen of their Apple device. If you are interested in more\ninformation about the current and past standards of favicons, you can read\n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href`\nattribute, are relative to the `static/` directory.\n\n### Graph View\n\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n  # whether automatically generate a legend\n  enableLegend: false\n\n  # whether to allow dragging nodes in the graph\n  enableDrag: true\n\n  # whether to allow zooming and panning the graph\n  enableZoom: true\n\n  # how many neighbours of the current node to show (-1 is all nodes)\n  depth: 1\n\n  # initial zoom factor of the graph\n  scale: 1.2\n\n  # how strongly nodes should repel each other\n  repelForce: 2\n\n  # how strongly should nodes be attracted to the center of gravity\n  centerForce: 1\n\n  # what the default link length should be\n  linkDistance: 1\n\n  # how big the node labels should be\n  fontSize: 0.6\n\n  # scale at which to start fading the labes on nodes\n  opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n  # same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n## Styling\n\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`.\n\n### Partials\n\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n\n[CJK + Latex Support (测试)](\u003cnotes/CJK%20+%20Latex%20Support%20(测试).md\u003e) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'مدونتي'\n    weight = 1\n```\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (测试)](notes/CJK%20+%20Latex%20Support%20(测试).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\n🐛 [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null},"/notes/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2023-02-01T02:44:28.333537167Z","tags":null}}