<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://abhidhamma-private.github.io/quartz/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://abhidhamma-private.github.io/quartz/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://abhidhamma-private.github.io/quartz/notes/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/setup/</guid><description>Making your own Quartz Setting up Quartz requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!</description></item><item><title>Editing Content in Quartz</title><link>https://abhidhamma-private.github.io/quartz/notes/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/editing/</guid><description>Editing Quartz runs on top of Hugo so all notes are written in Markdown.
Folder Structure Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.</description></item><item><title>Obsidian Vault Integration</title><link>https://abhidhamma-private.github.io/quartz/notes/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/obsidian/</guid><description>Setup Obsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.</description></item><item><title>Preview Changes</title><link>https://abhidhamma-private.github.io/quartz/notes/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your Quartz site looks like before deploying it to the internet, the following instructions guide you through installing the proper dependencies to run it locally.</description></item><item><title>Deploying Quartz to the Web</title><link>https://abhidhamma-private.github.io/quartz/notes/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/hosting/</guid><description>Hosting on GitHub Pages Quartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go!</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%86%8C%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%86%8C%EC%88%98/</guid><description>1. 하는 일 소수를 찾는다
2. 용법 1)그냥 찾기 1 2 3 4 5 6 7 8 9 10 11 12 13 n=100 def isPrime(a): if(a&amp;lt;2): return False for i in range(2,a): if(a%i==0): return False return True for i in range(n+1): if(isPrime(i)): print(i) 2) 에라토스테네스의체 1 2 3 4 5 6 7 8 a = [False,False] + [True]*(n-1) primes=[] for i in range(2,n+1): if a[i]: primes.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%88%9C%EC%97%B4%EA%B3%BC%EC%A1%B0%ED%95%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%88%9C%EC%97%B4%EA%B3%BC%EC%A1%B0%ED%95%A9/</guid><description>1. 하는 일 순열과 조합 구하는 방법 for문도 있겠지만 나중에 알아보고 쉬운 itertools 먼저보자
2. 용법 1) 순열 순서가 있다 ex) 1, 2, 3이면 3P3 = 3*2*1 (6개) = [(1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), (3, 2, 1)]</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0/</guid><description>1. 하는 일 그냥 약수구하기, 약수 빠르게 구하기
2. 용법 1) 약수의 개수 구하기 그냥 약수를 구하는 방법이다.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%A7%84%EB%B2%95%EB%B3%80%ED%99%98%EA%B0%9C%EB%85%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%A7%84%EB%B2%95%EB%B3%80%ED%99%98%EA%B0%9C%EB%85%90/</guid><description>![[진법변환1.png]] ![[진법변환2.png]]
1. 설명 n진법에서 n진법으로 변환한다
2. 용법 1) 10진법 -&amp;gt; 3진법 10진법 숫자 45를 3진법 숫자로 바꾸기</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EA%B0%9C%EB%85%90/%EC%88%98%ED%95%99/%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0/</guid><description>1. 설명 최대공약수와 최소공배수를 구한다
2. 용법 1) 최대공약수 m, n 두 수중에 더 큰수부터 1씩 빼면서 공약수중에 최대값을 찾는다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/ASCII-%EA%B4%80%EB%A0%A8-%ED%95%A8%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/ASCII-%EA%B4%80%EB%A0%A8-%ED%95%A8%EC%88%98/</guid><description>1. 하는 일 문자와 아스키코드를 서로 변환
2. 용법 1) ord 문자를 아스키로 바꿔준다
1 2 3 4 ord(&amp;#34;0&amp;#34;) # 48 ord(&amp;#34;1&amp;#34;) # 49 ord(&amp;#34;A&amp;#34;) # 65 ord(&amp;#34;a&amp;#34;) # 97 2) chr 아스키를 문자로 바꿔준다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/enumerate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/enumerate/</guid><description>1. 하는 일 리스트에서 값과 index를 둘다받고싶을때
2. 용법 1) 1 2 for i, v in enumerate([&amp;#39;tic&amp;#39;, &amp;#39;tac&amp;#39;, &amp;#39;toe&amp;#39;]): print(i, v) # 0 tic 1 tac 2 toe</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/len/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/len/</guid><description>1. 하는 일 객체의 길이를 구한다 (해당 자료형의 길이라고 대표할 수 있는것)
2. 용법 1) list, tuple의 길이 원소의 개수</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/map/</guid><description>1. 하는 일 iterable 한 data를 func 의 인자로 넣어 나온 결과들을 iterator 형태로 반환해 주는 함수
2. 용법 1) 2) 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/range/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/range/</guid><description>1. 하는 일 연속된 숫자의 정수를 만든다
2. 용법 1) 매개변수가 1개 일 때 기본값 0부터 5개</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/reduce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/reduce/</guid><description>1. 하는 일 자료구조와 함수를 받아서 각 요소에 함수를 적용한 값을 만든다
2. 용법 from functools import reduce (functools.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/reversed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/reversed/</guid><description>1. 하는 일 range를 거꾸로 돌리고싶을때
2. 용법 1) 1 2 for i in reversed(range(1, 10, 2)): print(i) 2) 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/sorted/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/sorted/</guid><description>1. 하는 일 어떤 리스트를 정렬한 새로운 리스트를 반
2. 용법 1) 1 2 3 basket = [&amp;#39;apple&amp;#39;, &amp;#39;orange&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;pear&amp;#39;, &amp;#39;orange&amp;#39;, &amp;#39;banana&amp;#39;] for i in sorted(basket): print(i) #apple apple banana orange orange pear 2) set과 함께쓰면 중복도 제거가능 1 2 3 basket = [&amp;#39;apple&amp;#39;, &amp;#39;orange&amp;#39;, &amp;#39;apple&amp;#39;, &amp;#39;pear&amp;#39;, &amp;#39;orange&amp;#39;, &amp;#39;banana&amp;#39;] for f in sorted(set(basket)): print(f) #apple banana orange pear 3) 정렬 조건 바꾸기 1 2 3 4 5 6 7 basket = [&amp;#39;105&amp;#39;, &amp;#39;204&amp;#39;, &amp;#39;303&amp;#39;, &amp;#39;402&amp;#39;, &amp;#39;501&amp;#39;] sorted(basket, key=lambda x:x[1]) # 1번째 인덱스로 정렬 # [&amp;#39;101&amp;#39;, &amp;#39;202&amp;#39;, &amp;#39;303&amp;#39;, &amp;#39;404&amp;#39;, &amp;#39;505&amp;#39;] (그대로) sorted(basket, key=lambda x:(x[1], x[2])) # 1번째 인덱스로 정렬후 2번째 인덱스로 정렬 # [&amp;#39;501&amp;#39;, &amp;#39;402&amp;#39;, &amp;#39;303&amp;#39;, &amp;#39;204&amp;#39;, &amp;#39;105&amp;#39;] (2번째 인덱스로 내림차순 정렬) 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/sum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/sum/</guid><description>1. 하는 일 list, tuple의 값을 합한다
2. 용법 1) 리스트 원소를 더한다
1 2 list = [1, 2, 3, 4, 5] sum(list) # 15 2) 튜플 원소를 더한다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/validation%ED%95%A8%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/validation%ED%95%A8%EC%88%98/</guid><description>1. 하는 일 validation을 한다
2. 용법 1) isalpha 알파벳으로만 이루어져있는지 확인(한글포함)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # Appia Example for isalpha # It is to explain how to check whether the string consist of alphabet or not.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/zip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/zip/</guid><description>1. 하는 일 리스트 두개를 한꺼번에 같이 돌리고 싶을때 복수개의 iterable 객체로부터 같은 idx의 원소들을 비교할 때 쓰는 함수다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EB%B9%88%EC%B9%B8%EC%B1%84%EC%9A%B0%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EB%B9%88%EC%B9%B8%EC%B1%84%EC%9A%B0%EA%B8%B0/</guid><description>1. 하는 일 숫자를 입력받아 빈 개수 만큼 문자의 앞에 0으로 빈칸을 채움
2. 용법 1) zfill 0으로 채운다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EC%88%98%ED%95%99%EA%B4%80%EB%A0%A8%ED%95%A8%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EC%88%98%ED%95%99%EA%B4%80%EB%A0%A8%ED%95%A8%EC%88%98/</guid><description>1. 하는 일 수학관련 간단한것들 여기 정리
2. 용법 1) abs 절대값계산
1 2 abs(-1) # 1 abs(1) # 1 2) 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EC%A7%84%EB%B2%95%EB%B3%80%ED%99%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%EC%A7%84%EB%B2%95%EB%B3%80%ED%99%98/</guid><description>1. 하는 일 진법을 변환한다
2. 용법 1) n진수 -&amp;gt; 10진수 1 2 3 4 5 6 print(int(&amp;#39;101&amp;#39;,2)) # 5 print(int(&amp;#39;202&amp;#39;,3)) # 20 print(int(&amp;#39;303&amp;#39;,4)) # 51 print(int(&amp;#39;404&amp;#39;,5)) # 104 print(int(&amp;#39;505&amp;#39;,6)) # 185 print(int(&amp;#39;ACF&amp;#39;,16)) # 2767 2) 10진수 -&amp;gt; n진수 1 2 3 4 5 print(bin(11)) # 0b1011 2진수 1011(2) print(oct(11)) # 0o13 8진수 13(8) print(hex(11)) # 0xb 16진수 b(16) print(bin(11)[:2]) # 1011 진수표시부분 지우려면 [:2] 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%ED%98%95%EB%B3%80%ED%99%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/%ED%98%95%EB%B3%80%ED%99%98/</guid><description>1. 하는 일 자료형을 바꿔준다
2. 용법 1) 파이썬 정수 변환 - int() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 # 파이썬 int 타입 변환 예제 # int(정수) : 정수를 정수로 변환 (가능함.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/args-kwargs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/args-kwargs/</guid><description>1. 하는 일 갯수가 동적인 인자를 전달할때 쓴다 *x형식은 튜플타입으로 순서대로 전달하고 **x형식은 딕셔너리타입으로 이름과함께 전달한다
2. 용법 1) *args 튜플을 순서대로 전달받는다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/slicing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/slicing/</guid><description>1. 하는 일 배열로 된 곳(문자열, 리스트, 넘파이, 벡터, 행렬 등등)에서 사용할 수 있는 자르기다
2. 용법 1) str(start, end, step) 1 2 s = &amp;#34;12345&amp;#34; s[0:5:2] # 1 2) str(start, end) 1 2 s = &amp;#34;12345&amp;#34; s[2:4] # 34 3)str(-n) 마지막 n개의 문자열 출력</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/%EC%82%BC%ED%95%AD%EC%97%B0%EC%82%B0%EC%9E%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%EB%AC%B8%EB%B2%95/%EC%82%BC%ED%95%AD%EC%97%B0%EC%82%B0%EC%9E%90/</guid><description>1. 하는 일 조건에 따른 값을 한줄로 쓸 수 있게 해준다
2. 용법 1) 단독으로 쓰는 경우 참인경우의 값 if 조건 else 거짓인경우의 값</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/dictionary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/dictionary/</guid><description/></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/list/</guid><description>1. 하는 일 리스트타입을 가공할 수 있도록 해준다
2. 용법 1) index 인덱스를 찾아준다
1 2 list = [&amp;#39;Eat&amp;#39;, &amp;#39;Kim&amp;#39;, &amp;#39;Chi&amp;#39;] list.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/set/</guid><description>1. 하는 일 중복을 없애준다
2. 용법 1) 선언 set 자료구조는 {}모양이지만 그냥 {}라고 하면 딕셔너리가 된다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/str/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/str/</guid><description>1. 하는 일 문자열 객체에 문자열을 편리하게 가공할 수 있는 내장함수들이 있다 익혀두자
2. 용법 1) lower 문자열을 모두 소문자로 바꾼다(원본은 바꾸지않는다)</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/tuple/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%EC%9C%A0%ED%98%95/%ED%83%80%EC%9E%85%EB%B3%84-%EB%82%B4%EC%9E%A5%ED%95%A8%EC%88%98/tuple/</guid><description/></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv0/%EC%A4%91%EB%B3%B5%EB%90%9C-%EC%88%AB%EC%9E%90-%EA%B0%9C%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv0/%EC%A4%91%EB%B3%B5%EB%90%9C-%EC%88%AB%EC%9E%90-%EA%B0%9C%EC%88%98/</guid><description>1 2 3 4 5 6 7 from functools import reduce def solution(array, n): return reduce(lambda acc, cur: acc + 1 if cur == n else acc, array, 0 ) !</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv0/%EC%A7%9D%EC%88%98%EC%9D%98-%ED%95%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv0/%EC%A7%9D%EC%88%98%EC%9D%98-%ED%95%A9/</guid><description>1.소스 1 2 3 4 5 6 7 8 9 from functools import reduce def solution(n): return reduce( lambda acc, cur: acc + cur if cur % 2 == 0 else acc, range(1, n + 1), 0 ) 2.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/10%ED%95%98%EC%83%A4%EB%93%9C%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/10%ED%95%98%EC%83%A4%EB%93%9C%EC%88%98/</guid><description>1.문제 ![[10하샤드수.png]]
2.소스 1 solution = lambda x: x % sum(map(int, str(x))) == 0 3.설명 문자열로 바꿔서 각 자리수를 꺼내 더한뒤 나누어떨어지는지 확인한다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/11%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80-1%EC%9D%B4-%EB%90%98%EB%8A%94-%EC%88%98-%EC%B0%BE%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/11%EB%82%98%EB%A8%B8%EC%A7%80%EA%B0%80-1%EC%9D%B4-%EB%90%98%EB%8A%94-%EC%88%98-%EC%B0%BE%EA%B8%B0/</guid><description>1.문제 ![[나머지가 1이되는 수 찾기.png]]
2.소스 1 2 def solution(n): return (i for i in range(1, n+1) if n % i == 1).</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/16%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C-%EA%B9%80%EC%84%9C%EB%B0%A9-%EC%B0%BE%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/16%EC%84%9C%EC%9A%B8%EC%97%90%EC%84%9C-%EA%B9%80%EC%84%9C%EB%B0%A9-%EC%B0%BE%EA%B8%B0/</guid><description>1.문제 ![[서울에서 김서방 찾기.png]]
2.소스 1)내소스
1 2 3 4 5 6 7 def solution(seoul): answer = &amp;#39;&amp;#39; for i in range(0, len(seoul)): s = seoul[i] if s == &amp;#34;Kim&amp;#34;: return f&amp;#34;김서방은 {i}에 있다&amp;#34; return answer 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/19%EC%A0%9C%EC%9D%BC-%EC%9E%91%EC%9D%80-%EC%88%98-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/19%EC%A0%9C%EC%9D%BC-%EC%9E%91%EC%9D%80-%EC%88%98-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/</guid><description>1.문제 ![[제일 작은 수 제거하기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 def solution(arr): if len(arr) == 1: return [-1] else : arr.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/1%EC%A7%9D%EC%88%98%EC%99%80-%ED%99%80%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/1%EC%A7%9D%EC%88%98%EC%99%80-%ED%99%80%EC%88%98/</guid><description>1.소스 1 2 def solution(num): return &amp;#39;Even&amp;#39; if num % 2 == 0 else &amp;#39;Odd&amp;#39; 2.문제 ![[짝수와 홀수.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/20%EC%9D%8C%EC%96%91%EB%8D%94%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/20%EC%9D%8C%EC%96%91%EB%8D%94%ED%95%98%EA%B8%B0/</guid><description>1.문제 ![[음양더하기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 def solution(absolutes, signs): answer = 0 for i in range(0, len(absolutes)): if signs[i]: answer += absolutes[i] else : answer += absolutes[i] * (-1) return answer 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/21%EC%97%86%EB%8A%94-%EC%88%AB%EC%9E%90-%EB%8D%94%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/21%EC%97%86%EB%8A%94-%EC%88%AB%EC%9E%90-%EB%8D%94%ED%95%98%EA%B8%B0/</guid><description>1.문제 ![[없는 숫자 더하기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 def solution(numbers): answer = 0 for i in range(10): if numbers.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/22%EA%B0%80%EC%9A%B4%EB%8D%B0%EA%B8%80%EC%9E%90-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/22%EA%B0%80%EC%9A%B4%EB%8D%B0%EA%B8%80%EC%9E%90-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/</guid><description>1.문제 ![[가운데글자 가져오기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 def solution(s): std = int(len(s)/2) if len(s) % 2 == 0: return s[std-1:std+1] else : return s[std] 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/23%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/23%EC%88%98%EB%B0%95%EC%88%98%EB%B0%95%EC%88%98/</guid><description>1.문제 ![[수박수박수.png]]
2.소스 1)내 소스
1 2 3 4 5 def solution(n): answer = &amp;#39;&amp;#39; for i in range(n): answer += &amp;#39;수&amp;#39; if i % 2 == 0 else &amp;#39;박&amp;#39; return answer 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/24%EB%82%B4%EC%A0%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/24%EB%82%B4%EC%A0%81/</guid><description>1.문제 ![[24내적.png]]
2.소스 1)내 소스
1 2 3 4 5 def solution(a, b): answer = 0 for (ela, elb) in zip(a, b): answer += ela * elb return answer 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/25%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/25%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/</guid><description>1.문제 ![[문자열 내림차순으로 배치하기.png]]
2.소스 1)내 소스
1 2 def solution(s): return &amp;#39;&amp;#39;.join(sorted(s, reverse=True)) 2)다른사람 소스
3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/26-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8B%A4%EB%A3%A8%EA%B8%B0-%EA%B8%B0%EB%B3%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/26-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8B%A4%EB%A3%A8%EA%B8%B0-%EA%B8%B0%EB%B3%B8/</guid><description>1.문제 ![[문자열 다루기 기본.png]]
2.소스 1)내 소스
1 solution = lambda x : (len(x) == 4 or len(x) == 6) and x.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/28%EB%B6%80%EC%A1%B1%ED%95%9C-%EA%B8%88%EC%95%A1-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/28%EB%B6%80%EC%A1%B1%ED%95%9C-%EA%B8%88%EC%95%A1-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0/</guid><description>1.문제 ![[부족한금액계산하기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 def solution(price, money, count): leftMoney = money - sum(i * price for i in range(1, count + 1)) if leftMoney &amp;gt; 0: return 0 else: return abs(leftMoney) 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/29%ED%96%89%EB%A0%AC%EC%9D%98%EB%8D%A7%EC%85%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/29%ED%96%89%EB%A0%AC%EC%9D%98%EB%8D%A7%EC%85%88/</guid><description>1.문제 2.소스 1)내 소스
1 2 3 4 5 6 7 8 def solution(arr1, arr2): answer = [] for row in range(len(arr1)): tempRow = [] for col in range(len(arr1[0])): tempRow.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/2%ED%8F%89%EA%B7%A0-%EA%B5%AC%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/2%ED%8F%89%EA%B7%A0-%EA%B5%AC%ED%95%98%EA%B8%B0/</guid><description>1.소스 1 2 def solution(arr): return sum(arr)/len(arr) 2.문제 ![[평균 구하기.png]]
3.사용된 유형 [[sum]] [[len]]</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/34%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/34%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/</guid><description>1.문제 ![[34최대공약수와최소공배수.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def solution(n, m): gcd = lcm = 0 # 최대공약수 for i in range(max(n,m), 0, -1): if n % i == 0 and m % i == 0: gcd = i break # 최소공배수 for i in range(max(n, m), (n * m) + 1): if i % n == 0 and i % m == 0: lcm = i break return [gcd, lcm] 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/35-3%EC%A7%84%EB%B2%95%EB%92%A4%EC%A7%91%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/35-3%EC%A7%84%EB%B2%95%EB%92%A4%EC%A7%91%EA%B8%B0/</guid><description>1.문제 ![[3진법뒤집기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 11 def solution(n): # 뒤집힌 3진법으로 바꾸기 threeN = [] while n &amp;gt; 0: threeN.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/36%EC%98%88%EC%82%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/36%EC%98%88%EC%82%B0/</guid><description>1.문제 ![[36예산.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 def solution(d, budget): for i, v in enumerate(sorted(d)): print(&amp;#34;지원부서개수 : &amp;#34;, i, &amp;#34;남은금액 : &amp;#34;, budget) if budget - v &amp;lt; 0: return i elif budget - v == 0: return i+1 else: budget -= v return len(d) 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/37-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/37-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84/</guid><description>1.문제 ![[37 비밀지도.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 def solution(n, arr1, arr2): answer = [] for i in range(n): tmp = bin(arr1[i] | arr2[i]) tmp = tmp[2:].</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/38-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/38-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-%EB%A7%88%EC%9D%8C%EB%8C%80%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/</guid><description>1.문제 ![[38문자열 내 마음대로 정렬하기.png]]
2.소스 1)내 소스
1 2 def solution(strings, n): return sorted(strings, key=lambda x: (x[n], x)) 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/39-K%EB%B2%88%EC%A7%B8%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/39-K%EB%B2%88%EC%A7%B8%EC%88%98/</guid><description>1.문제 ![[39 K번째수.png]]
2.소스 1)내 소스
1 2 3 4 5 6 def solution(array, commands): answer = [] for c in commands: [i, j, k] = c answer.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/3%EC%95%BD%EC%88%98%EC%9D%98-%ED%95%A9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/3%EC%95%BD%EC%88%98%EC%9D%98-%ED%95%A9/</guid><description>1.소스 1 2 3 4 5 6 def solution(n): sum = 0 for i in range(1, n+1): if n % i == 0: sum += i return sum 2.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/40-%EB%91%90-%EA%B0%9C-%EB%BD%91%EC%95%84%EC%84%9C-%EB%8D%94%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/40-%EB%91%90-%EA%B0%9C-%EB%BD%91%EC%95%84%EC%84%9C-%EB%8D%94%ED%95%98%EA%B8%B0/</guid><description>1.문제 ![[40 두 개 뽑아서 더하기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 def solution(numbers): answer = set() length = len(numbers) for i in range(length): for j in range(length): if i !</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/41-%EC%82%BC%EC%B4%9D%EC%82%AC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/41-%EC%82%BC%EC%B4%9D%EC%82%AC/</guid><description>1.문제 ![[41 삼총사.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 from itertools import combinations def solution(number): answer = 0 for t in list(combinations(number,3)): if sum(t) == 0: answer += 1 return answer 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42-2016%EB%85%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/42-2016%EB%85%84/</guid><description>1.문제 ![[42 2016년.png]]
2.소스 1)내 소스
2)다른사람 소스
1 2 3 4 5 6 7 8 9 10 11 12 def solution(a, b): answer = 0 days = [&amp;#39;FRI&amp;#39;,&amp;#39;SAT&amp;#39;,&amp;#39;SUN&amp;#39;,&amp;#39;MON&amp;#39;,&amp;#39;TUE&amp;#39;,&amp;#39;WED&amp;#39;,&amp;#39;THU&amp;#39;] months = [31, 29, 31, 30, 31, 30,31, 31, 30, 31, 30, 31] for i in range(a-1): answer += months[i] answer += b-1 answer = answer%7 return days[answer] 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/43-%ED%8F%B0%EC%BC%93%EB%AA%AC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/43-%ED%8F%B0%EC%BC%93%EB%AA%AC/</guid><description>1.문제 ![[43 폰켓몬.png]]
2.소스 1)내 소스
2)다른사람 소스
1 2 3 4 5 6 7 def solution(nums): unique_types = len(set(nums)) if len(nums) / 2 &amp;gt; unique_types: return unique_types else: return len(nums) / 2 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/44-%EC%86%8C%EC%88%98%EC%B0%BE%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/44-%EC%86%8C%EC%88%98%EC%B0%BE%EA%B8%B0/</guid><description>1.문제 ![[44 소수찾기.png]]
2.소스 1)내 소스
2)다른사람 소스
1 2 3 4 5 6 7 8 9 10 def solution(n): a = [False,False] + [True]*(n-1) primes=[] for i in range(2,n+1): if a[i]: primes.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/45-N%EC%A7%84%EC%88%98-%EA%B2%8C%EC%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/45-N%EC%A7%84%EC%88%98-%EA%B2%8C%EC%9E%84/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 def TenToN(number, n): if number == 0: return &amp;#34;0&amp;#34; transArr = [] n_dict = { 0:&amp;#34;0&amp;#34;, 1:&amp;#34;1&amp;#34;, 2:&amp;#34;2&amp;#34;, 3:&amp;#34;3&amp;#34;, 4:&amp;#34;4&amp;#34;, 5:&amp;#34;5&amp;#34;, 6:&amp;#34;6&amp;#34;, 7:&amp;#34;7&amp;#34;,8:&amp;#34;8&amp;#34;, 9:&amp;#34;9&amp;#34;, 10:&amp;#34;A&amp;#34;, 11:&amp;#34;B&amp;#34;, 12:&amp;#34;C&amp;#34;, 13:&amp;#34;D&amp;#34;, 14:&amp;#34;E&amp;#34;, 15:&amp;#34;F&amp;#34; } while number &amp;gt; 0: transArr.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/49%EC%8B%A4%ED%8C%A8%EC%9C%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/49%EC%8B%A4%ED%8C%A8%EC%9C%A8/</guid><description>1.문제 ![[49실패율.png]]
2.소스 1)내 소스
2)다른사람 소스
3.설명 4.사용된 유형</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/4%EC%9E%90%EB%A6%BF%EC%88%98-%EB%8D%94%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/4%EC%9E%90%EB%A6%BF%EC%88%98-%EB%8D%94%ED%95%98%EA%B8%B0/</guid><description>1.문제 ![[자릿수 더하기.png]]
2.소스 1 2 3 4 5 6 7 8 from functools import reduce def solution(n): return reduce( lambda acc, cur: acc + int(cur), str(n), 0 ) 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/50%EB%8B%A4%ED%8A%B8%EA%B2%8C%EC%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/50%EB%8B%A4%ED%8A%B8%EA%B2%8C%EC%9E%84/</guid><description>1.문제 ![[50다트게임1.png]] ![[50다트게임2.png]]
2.소스 1)내 소스
2)다른사람 소스
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 def solution(dartResult): n = &amp;#39;&amp;#39; score = [] for i in dartResult: if i.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/51%EB%A1%9C%EB%98%90%EC%9D%98%EC%B5%9C%EA%B3%A0%EC%88%9C%EC%9C%84%EC%99%80%EC%B5%9C%EC%A0%80%EC%88%9C%EC%9C%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/51%EB%A1%9C%EB%98%90%EC%9D%98%EC%B5%9C%EA%B3%A0%EC%88%9C%EC%9C%84%EC%99%80%EC%B5%9C%EC%A0%80%EC%88%9C%EC%9C%84/</guid><description>1.문제 ![[51로또의최고순위와최저순위.png]]
2.소스 1)내 소스
2)다른사람 소스
3.설명 4.사용된 유형</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/52-%EC%BD%9C%EB%9D%BC%EB%AC%B8%EC%A0%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/52-%EC%BD%9C%EB%9D%BC%EB%AC%B8%EC%A0%9C/</guid><description>1.문제 ![[52콜라문제.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 def solution(a, b, n): answer = 0 while n &amp;gt;= a: mod = n % a # 콜라를 교환하고 남은 빈 병의 개수 n = (n//a) * b # 교환한 콜라의 개수 answer += n # 총 콜라 수 n += mod # 빈병이 된 콜라에 교환하고 남은 빈 병의 개수를 더해서 바꿀때 사용한다 return answer 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/53-%EC%B2%B4%EC%9C%A1%EB%B3%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/53-%EC%B2%B4%EC%9C%A1%EB%B3%B5/</guid><description>1.문제 ![[53체육복.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 def solution(n, lost, reserve): answer = 0 # 여분의 체육복이 있었지만 도난당한사람을 제외한다 reserve_del = set(reserve)-set(lost) lost_del = set(lost)-set(reserve) # 앞쪽인덱스부터 자기 다음번호나 앞번호에 잃어버린 사람이 있으면 list에서 지운다 for i in reserve_del: if i-1 in lost_del: lost_del.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/54-%EC%99%84%EC%A3%BC%ED%95%98%EC%A7%80%EB%AA%BB%ED%95%9C%EC%84%A0%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/54-%EC%99%84%EC%A3%BC%ED%95%98%EC%A7%80%EB%AA%BB%ED%95%9C%EC%84%A0%EC%88%98/</guid><description>1.문제 ![[54완주하지못한선수.png]]
2.소스 1)내 소스
1 2 3 4 5 def solution(participant, completion): completion.append(&amp;#34;~&amp;#34;) for i, j in zip(sorted(participant), sorted(completion)): if i !</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/55-%ED%91%B8%EB%93%9C%ED%8C%8C%EC%9D%B4%ED%8A%B8%EB%8C%80%ED%9A%8C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/55-%ED%91%B8%EB%93%9C%ED%8C%8C%EC%9D%B4%ED%8A%B8%EB%8C%80%ED%9A%8C/</guid><description>1.문제 ![[55푸트파이트대회.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 def solution(food): answer = &amp;#39;&amp;#39; half = &amp;#34;&amp;#34; for i, v in enumerate(food[1:]): for j in range(v//2): half += str(i+1) answer = half + &amp;#39;0&amp;#39; + half[::-1] return answer 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/56-%ED%82%A4%ED%8C%A8%EB%93%9C%EB%88%84%EB%A5%B4%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/56-%ED%82%A4%ED%8C%A8%EB%93%9C%EB%88%84%EB%A5%B4%EA%B8%B0/</guid><description>1.문제 ![[56키패드누르기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 def solution(numbers, hand): answer = &amp;#39;&amp;#39; #거리를 측정하기 위해 좌표로 변환 coordinate = { &amp;#39;1&amp;#39;:[0,3], &amp;#39;2&amp;#39;:[1,3], &amp;#39;3&amp;#39;:[2,3], &amp;#39;4&amp;#39;:[0,2], &amp;#39;5&amp;#39;:[1,2], &amp;#39;6&amp;#39;:[2,2], &amp;#39;7&amp;#39;:[0,1], &amp;#39;8&amp;#39;:[1,1], &amp;#39;9&amp;#39;:[2,1], &amp;#39;*&amp;#39;:[0,0], &amp;#39;0&amp;#39;:[1,0], &amp;#39;#&amp;#39;:[2,0], } currentL = coordinate[&amp;#39;*&amp;#39;] currentR = coordinate[&amp;#39;#&amp;#39;] for i in numbers: print(&amp;#34;===&amp;#34;,i,&amp;#34;===&amp;#34;) if i == 1 or i == 4 or i == 7: answer += &amp;#39;L&amp;#39; currentL = coordinate[str(i)] elif i == 3 or i == 6 or i == 9: answer += &amp;#39;R&amp;#39; currentR = coordinate[str(i)] else: # 2,5,8,0 키패드와 각 엄지손가락의 거리 측정 target = coordinate[str(i)] distanceR = abs(target[0]-currentR[0]) + abs(target[1]-currentR[1]) distanceL = abs(target[0]-currentL[0]) + abs(target[1]-currentL[1]) if distanceR &amp;gt; distanceL: answer += &amp;#39;L&amp;#39; currentL = coordinate[str(i)] elif distanceR &amp;lt; distanceL: answer += &amp;#39;R&amp;#39; currentR = coordinate[str(i)] else: if hand == &amp;#39;right&amp;#39;: answer += &amp;#39;R&amp;#39; currentR = coordinate[str(i)] else : answer += &amp;#39;L&amp;#39; currentL = coordinate[str(i)] return answer 2)다른사람 소스</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/57-%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98-%EB%AC%B4%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/57-%EA%B8%B0%EC%82%AC%EB%8B%A8%EC%9B%90%EC%9D%98-%EB%AC%B4%EA%B8%B0/</guid><description>1.문제 ![[57기사단원의 무기.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def solution(number, limit, power): answer = 0 for i in range(1, number + 1): divisor = 0 for j in range(1, int(i**(1/2))+1): if i%j == 0: divisor += 1 if ((j**2) !</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/58-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/58-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84/</guid><description>1.문제 ![[58크레인인형뽑기게임.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 def solution(board, moves): answer = 0 bucket = [] for i in moves: # 인형집기 시작 for j in board: if j[i-1] !</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/5%EC%A0%95%EC%88%98-%EC%A0%9C%EA%B3%B1%EA%B7%BC-%ED%8C%90%EB%B3%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/5%EC%A0%95%EC%88%98-%EC%A0%9C%EA%B3%B1%EA%B7%BC-%ED%8C%90%EB%B3%84/</guid><description>1.문제 ![[정수 제곱근 판별.png]]
2.소스 1 2 3 4 5 def solution(n): for i in range(1, n+1): if i ** 2 == n: return (i+1) ** 2 return -1 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/6%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/6%EC%9E%90%EC%97%B0%EC%88%98-%EB%92%A4%EC%A7%91%EC%96%B4-%EB%B0%B0%EC%97%B4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>1.문제 ![[자연수 뒤집어 배열로 만들기.png]]
2.소스 1 2 def solution(n): return list(map(int,reversed(str(n)))) 3.설명 숫자를 문자열로 바꾸고 reversed로 뒤집고 int 형식으로 다시 바꿔서 리스트로 만들어 리턴한다</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/7%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%9C%EC%88%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/7%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%82%B4-p%EC%99%80-y%EC%9D%98-%EA%B0%9C%EC%88%98/</guid><description>1.문제 ![[문자열 내 p와 y의 개수.png]]
2.소스 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def solution(s): pCount = 0 yCount = 0 for i in range(0, len(s)): if (s[i] == &amp;#34;p&amp;#34;) | (s[i] == &amp;#34;P&amp;#34;) : pCount += 1 elif (s[i] == &amp;#34;y&amp;#34;) | (s[i] == &amp;#34;Y&amp;#34;) : yCount += 1 if pCount == yCount: return True elif pCount !</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/8%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98%EC%99%80-%EB%8D%A7%EC%85%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/8%EC%95%BD%EC%88%98%EC%9D%98-%EA%B0%9C%EC%88%98%EC%99%80-%EB%8D%A7%EC%85%88/</guid><description>1.문제 ![[약수의 개수와 덧셈.png]]
2.소스 1 2 3 4 5 6 7 8 9 10 11 12 13 def solution(left, right): answer = 0 for i in range(left, right + 1): divisorCount = 0 for j in range(1, i + 1): if i % j == 0: divisorCount += 1 if divisorCount % 2 == 0: answer += i else : answer -= i return answer 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/9%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/lv1/9%EC%B5%9C%EC%86%8C%EC%A7%81%EC%82%AC%EA%B0%81%ED%98%95/</guid><description>1.문제 ![[최소직사각형.png]]
2.소스 1 2 3 4 def solution(sizes): return max(max(x) for x in sizes) * max(min(x) for x in sizes) 3.</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/%EC%BD%94%ED%85%8C/%EA%B0%80%EC%9A%B0%EC%8A%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/PS/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/%EC%BD%94%ED%85%8C/%EA%B0%80%EC%9A%B0%EC%8A%A4/</guid><description>1.문제 ![[Pasted image 20221029160135.png]] ![[Pasted image 20221029160206.png]] ![[Pasted image 20221029160232.png]]
2.소스 1)내 소스
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 def solution(x, y): tempDict = {} areaArray = [] for e in y: tempDict[e] = [] # 평행한 좌표 두개씩 선택 for e in zip(x, y): tempDict[e[1]].</description></item><item><title/><link>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EC%9A%94%EC%95%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/%ED%8C%8C%EC%9D%B4%EC%8D%AC/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%EC%9A%94%EC%95%BD/</guid><description>흔히 쓰이는 자료구조들이 어떤 역할을 하는지 간략히 적어보자
1.배열 배열은 c언어 기준으로 고정된 크기만큼의 연속된 메모리 할당이다 즉 전체 크기에 따라 메모리를 더 할당해줘야 한다</description></item><item><title>Callouts</title><link>https://abhidhamma-private.github.io/quartz/notes/callouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/callouts/</guid><description>Callout support Quartz supports the same Admonition-callout syntax as Obsidian.
This includes
12 Distinct callout types (each with several aliases) Collapsable callouts See documentation on supported types and syntax here.</description></item><item><title>CJK + Latex Support (测试)</title><link>https://abhidhamma-private.github.io/quartz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</guid><description>Chinese, Japanese, Korean Support 几乎在我们意识到之前，我们已经离开了地面。
우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.
私たちがそれを知るほぼ前に、私たちは地面を離れていました。
Latex Block math works with two dollar signs $$.</description></item><item><title>Configuration</title><link>https://abhidhamma-private.github.io/quartz/notes/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/config/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item><item><title>Custom Domain</title><link>https://abhidhamma-private.github.io/quartz/notes/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/custom-Domain/</guid><description>Registrar This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.</description></item><item><title>Hosting with Docker</title><link>https://abhidhamma-private.github.io/quartz/notes/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/docker/</guid><description>If you want to host Quartz on a machine without using a webpage hosting service, it may be easier to install Docker Compose and follow the instructions below than to install Quartz&amp;rsquo;s dependencies manually.</description></item><item><title>Ignoring Notes</title><link>https://abhidhamma-private.github.io/quartz/notes/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/ignore-notes/</guid><description>Quartz Ignore Edit ignoreFiles in config.toml to include paths you&amp;rsquo;d like to exclude from being rendered.
1 2 3 4 5 6 .</description></item><item><title>Quartz Philosophy</title><link>https://abhidhamma-private.github.io/quartz/notes/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/philosophy/</guid><description>“[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.</description></item><item><title>Search</title><link>https://abhidhamma-private.github.io/quartz/notes/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/search/</guid><description>Quartz supports two modes of searching through content.
Full-text Full-text search is the default in Quartz. It produces results that exactly match the search query.</description></item><item><title>Showcase</title><link>https://abhidhamma-private.github.io/quartz/notes/showcase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/showcase/</guid><description>Want to see what Quartz can do? Here are some cool community gardens :)
Quartz Documentation (this site!) Jacky Zhao&amp;rsquo;s Garden Scaling Synthesis - A hypertext research notebook AWAGMI Intern Notes Shihyu&amp;rsquo;s PKM SlRvb&amp;rsquo;s Site Course notes for Information Technology Advanced Theory Brandon Boswell&amp;rsquo;s Garden Siyang&amp;rsquo;s Courtyard Data Dictionary 🧠 sspaeti.</description></item><item><title>Troubleshooting and FAQ</title><link>https://abhidhamma-private.github.io/quartz/notes/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Quartz.
While you&amp;rsquo;re here, join our Discord :)</description></item><item><title>Updating</title><link>https://abhidhamma-private.github.io/quartz/notes/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/updating/</guid><description>Haven&amp;rsquo;t updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update!</description></item><item><title>테스트</title><link>https://abhidhamma-private.github.io/quartz/notes/test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://abhidhamma-private.github.io/quartz/notes/test/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item></channel></rss>